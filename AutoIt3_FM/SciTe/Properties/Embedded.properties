

if PLAT_WIN
	position.left=0
	position.top=0
if PLAT_GTK
	position.left=5
	position.top=22
position.width=576
position.height=740
split.vertical=1

line.margin.width=4
margin.width=16
buffered.draw=1
use.palette=0

caret.period=500
view.whitespace=0
view.indentation.whitespace=1
view.indentation.guides=1
highlight.indentation.guides=1
edge.column=200
edge.mode=0
edge.colour=#C0DCC0
braces.check=1
braces.sloppy=1
selection.back=#DADADA

are.you.sure=1
default.file.ext=.cxx

tabsize=8
indent.size=8
use.tabs=1
indent.automatic=1
indent.opening=0
indent.closing=0


fold=1
fold.compact=1
fold.flags=16
fold.symbols=1

if PLAT_WIN
	find.command=findstr /n /s $(find.what) $(find.files)
if PLAT_GTK
	find.command=grep --line-number "$(find.what)" $(find.files)
find.files=*.c *.cxx *.h

clear.before.execute=0
caret.policy.xslop=1
caret.policy.width=20
caret.policy.xstrict=0
caret.policy.xeven=0
caret.policy.xjumps=0
caret.policy.yslop=1
caret.policy.lines=1
caret.policy.ystrict=1
caret.policy.yeven=1
caret.policy.yjumps=0

statusbar.number=4
statusbar.text.1=\
li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr)
statusbar.text.2=\
$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.
statusbar.text.3=\
Now is: Date=$(CurrentDate) Time=$(CurrentTime)
statusbar.text.4=\
$(FileNameExt) : $(FileDate) ó $(FileTime) | $(FileAttr)

if PLAT_WIN
	command.scite.help="file://$(SciteDefaultHome)\SciTEDoc.html"
	command.scite.help.subsystem=2
if PLAT_GTK
	command.print.*=a2ps "$(FileNameExt)"
	command.scite.help=netscape "file://$(SciteDefaultHome)/SciTEDoc.html"

code.page=0

export.html.wysiwyg=1
export.html.styleused=1
export.pdf.magnification=0
export.pdf.font=Helvetica
export.pdf.pagesize=595,842
export.pdf.margins=72,72,72,72
export.xml.collapse.spaces=1
export.xml.collapse.lines=1

chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
chars.accented=äöåúüˇ¿‡¡·¬‚√„ƒ‰≈Â∆Ê«Á»Ë…È ÍÀÎÃÏÕÌŒÓœÔ–—Ò“Ú”Û‘Ù’ı÷ÿ¯Ÿ˘⁄˙€˚‹¸›˝ﬁ˛ﬂˆ

source.files=*.asm;*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hxx;*.hpp;\
*.idl;*.odl;*.rc;*.rc2;*.dlg;*.def;\
*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\
*.java;*.js;*.py;*.pl;*.rb;*.cgi;*.lua;*.conf;\
make*;*.mak;\
*.properties;*.html;*.xml;*.iface;*.bat;*.e

open.filter=\
All Source|$(source.files)|\
All Files (*.*)|*.*|\
$(filter.ada)\
$(filter.conf)\
$(filter.asm)\
$(filter.ave)\
$(filter.baan)\
$(filter.bash)\
$(filter.cpp)\
$(filter.css)\
$(filter.eiffel)\
$(filter.erlang)\
$(filter.fortran)\
$(filter.idl)\
$(filter.java)\
$(filter.js)\
$(filter.kix)\
$(filter.lout)\
$(filter.lua)\
$(filter.matlab)\
$(filter.metapost)\
$(filter.mmixal)\
$(filter.nncrontab)\
$(filter.nsis)\
$(filter.pascal)\
$(filter.perl)\
$(filter.php)\
$(filter.pov)\
$(filter.properties)\
$(filter.ps)\
$(filter.python)\
$(filter.ruby)\
$(filter.sql)\
$(filter.specman)\
$(filter.tcl)\
$(filter.tex)\
$(filter.text)\
$(filter.vb)\
$(filter.web)\
$(filter.yaml)\
$(filter.verilog)

if PLAT_WIN
	font.base=font:Verdana,size:10
	font.small=font:Verdana,size:8
	font.comment=font:Comic Sans MS,size:9
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.text=font:Times New Roman,size:11
	font.text.comment=font:Verdana,size:9
	font.embedded.base=font:Verdana,size:9
	font.embedded.comment=font:Comic Sans MS,size:8
	font.monospace=font:Courier New,size:10
	font.vbs=font:Lucida Sans Unicode,size:10
if PLAT_GTK
	font.base=font:lucidatypewriter,size:12
	font.small=font:lucidatypewriter,size:10
	font.comment=font:new century schoolbook,size:12
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.text=font:times,size:14
	font.text.comment=font:lucidatypewriter,size:10
	font.embedded.base=font:lucidatypewriter,size:12
	font.embedded.comment=font:lucidatypewriter,size:12
	font.monospace=font:courier,size:12
	font.vbs=font:new century schoolbook,size:12
font.js=$(font.comment)

colour.code.comment.box=fore:#007F00
colour.code.comment.line=fore:#007F00
colour.code.comment.doc=fore:#3F703F
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#007F00
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#F0F0FF
colour.notused=back:#FF0000

colour.number=fore:#007F7F
colour.keyword=fore:#00007F
colour.string=fore:#7F007F
colour.char=fore:#7F007F
colour.operator=fore:#000000
colour.preproc=fore:#7F7F00
colour.error=fore:#FFFF00,back:#FF0000

style.*.32=$(font.base)
style.*.33=back:#C0C0C0,$(font.base)
style.*.34=fore:#0000FF,bold
style.*.35=fore:#FF0000,bold
style.*.36=
style.*.37=fore:#C0C0C0,back:#FFFFFF

if PLAT_WIN
	#print.colour.mode=1
	print.magnification=-1
	# Setup: left, right, top, bottom margins, in local units:
	# hundredths of millimeters or thousandths of inches
	print.margins=1500,1000,1000,1500
	# Header/footer:
	# && = &; &p = current page
	# &f = file name; &F = full path
	# &d = file date; &D = current date
	# &t = file time; &T = full time
	print.header.format=$(FileNameExt) ó Printed on $(CurrentDate), $(CurrentTime) ó Page $(CurrentPage)
	print.footer.format=$(FilePath) ó File date: $(FileDate) ó File time: $(FileTime)
	# Header/footer style
	print.header.style=font:Arial,size:12,bold
	print.footer.style=font:Arial Narrow,size:10,italics


menu.language=\
Text|txt|Shift+F11|\
Ada|ads||\
Apache Confi&g|conf||\
Assembler|asm||\
Avenue|ave||\
Baan|bc||\
&Batch|bat||\
&C / C++|c||\
C&#|cs||\
CSS|css||\
&Difference|diff||\
&Eiffel|e||\
Erlang|erl||\
&Errorlist|err||\
&Fortran|f90||\
H&ypertext|html|F12|\
&Java|java||\
Java&Script|js||\
TeX|tex||\
Lisp|lisp||\
Lot|lot||\
Lu&a|lua||\
Matlab|m.matlab||\
&Makefile|mak|Ctrl+Shift+F11|\
MetaPost|mp||\
MMIXAL|mms||\
Octave|m.octave||\
Pascal|pas||\
Pe&rl|pl||\
P&HP|php||\
P&LSQL|spec||\
&Properties|properties||\
P&ostScript|ps||\
P&OV-Ray SDL|pov||\
Pytho&n|py||\
Reso&urce|rc||\
Ruby|rb||\
Shell|sh||\
S&QL|sql||\
&TCL|tcl||\
&VB|vb||\
VBScr&ipt|vbs||\
&XML|xml|Shift+F12|\
&YAML|yaml||


user.shortcuts=\
Ctrl+Shift+V|IDM_PASTEANDDOWN|\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|


import ada
import asm
import ave
import baan
import conf
import cpp
import css
import eiffel
import erlang
import escript
import fortran
import html
import lisp
import lot
import lua
import matlab
import metapost
import mmixal
import others
import pascal
import perl
import pov
import ps
import python
import ruby
import sql
import tcl
import tex
import vb
import yaml



filter.ada=Ada (ads adb)|*.ads;*.adb|

file.patterns.ada=*.ads;*.adb

lexer.$(file.patterns.ada)=ada


keywordclass.ada.main=abort abstract accept access aliased all array at begin body \
case constant declare delay delta digits do else elsif end entry exception exit for \
function generic goto if in is limited loop new null of others out package pragma \
private procedure protected raise range record renames requeue return reverse \
select separate subtype tagged task terminate then type until use when while with
keywordclass.ada.operators=abs and mod not or rem xor

keywordclass.ada=$(keywordclass.ada.main) $(keywordclass.ada.operators)

keywords.$(file.patterns.ada)=$(keywordclass.ada)

style.ada.0=fore:#808080
style.ada.1=$(colour.keyword),bold
style.ada.2=
style.ada.3=$(colour.number)
style.ada.4=$(colour.operator),bold
style.ada.5=$(colour.char)
style.ada.6=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.ada.7=$(colour.string)
style.ada.8=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.ada.9=fore:#7F0000
style.ada.10=$(colour.code.comment.line),$(font.code.comment.line)
style.ada.11=fore:#FF0000

comment.block.ada=--~

braces.ada.style=4

statement.indent.$(file.patterns.ada)=5 begin declare else elsif exception for if is loop while
statement.end.$(file.patterns.ada)=10 ;
statement.lookback.$(file.patterns.ada)=20
block.start.$(file.patterns.ada)=10 then is
block.end.$(file.patterns.ada)=10 end

calltip.ada.word.characters=._$(chars.alpha)

adagcc=gcc -c $(FileNameExt)

command.compile.*.ads=$(adagcc)
command.build.*.ads=gnatmake
command.go.*.ads=$(FileName)

command.compile.*.adb=$(adagcc)
command.build.*.adb=gnatmake
command.go.*.adb=$(FileName)

file.patterns.asm=*.asm
filter.asm=Assembler (asm)|$(file.patterns.asm)|

lexer.$(file.patterns.asm)=asm


cpu_instruction=aaa aad aam aas adc add and call cbw \
	clc cld cli cmc cmp cmps cmpsb cmpsw cwd daa das dec div esc hlt \
	idiv imul in inc int into iret ja jae jb jbe jc jcxz je jg jge jl \
	jle jmp jna jnae jnb jnbe jnc jne jng jnge jnl jnle jno jnp jns \
	jnz jo jp jpe jpo js jz lahf lds lea les lods lodsb lodsw loop \
	loope loopew loopne loopnew loopnz loopnzw loopw loopz loopzw \
	mov movs movsb movsw mul neg nop not or out pop popf push pushf \
	rcl rcr ret retf retn rol ror sahf sal sar sbb scas scasb scasw \
	shl shr stc std sti stos stosb stosw sub test wait xchg xlat \
	xlatb xor \
	bound enter ins insb insw leave outs outsb outsw popa pusha pushw \
	arpl lar lsl sgdt sidt sldt smsw str verr verw clts lgdt lidt lldt lmsw ltr \
	bsf bsr bt btc btr bts cdq cmpsd cwde insd iretd iretdf  iretf \
	jecxz lfs lgs lodsd loopd  looped  loopned  loopnzd  loopzd  lss \
	movsd movsx movzx outsd popad popfd pushad pushd  pushfd scasd seta \
	setae setb setbe setc sete setg setge setl setle setna setnae setnb \
	setnbe setnc setne setng setnge setnl setnle setno setnp setns \
	setnz seto setp setpe setpo sets setz shld shrd stosd \
	bswap cmpxchg invd  invlpg  wbinvd  xadd \
	lock rep repe repne repnz repz


cpu_instruction2=cflush cpuid emms femms \
	cmovo cmovno cmovb cmovc cmovnae cmovae cmovnb cmovnc \
	cmove cmovz cmovne cmovnz cmovbe cmovna cmova cmovnbe \
	cmovs cmovns cmovp cmovpe cmovnp cmovpo cmovl cmovnge \
	cmovge cmovnl cmovle cmovng cmovg cmovnle \
	cmpxchg486 cmpxchg8b  \
	loadall loadall286 ibts icebp int1 int3 int01 int03 iretw \
	popaw popfw pushaw pushfw rdmsr rdpmc rdshr rdtsc \
	rsdc rsldt rsm rsts salc smi smint smintold svdc svldt svts \
	syscall sysenter sysexit sysret ud0 ud1 ud2 umov xbts wrmsr wrshr


fpu_instruction=f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcom fcomp fcompp fdecstp \
	fdisi fdiv fdivp fdivr fdivrp feni ffree fiadd ficom ficomp fidiv \
	fidivr fild fimul fincstp finit fist fistp fisub fisubr fld fld1 \
	fldcw fldenv fldenvw fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul \
	fmulp fnclex fndisi fneni fninit fnop fnsave fnsavew fnstcw fnstenv \
	fnstenvw fnstsw fpatan fprem fptan frndint frstor frstorw fsave \
	fsavew fscale fsqrt fst fstcw fstenv fstenvw fstp fstsw fsub fsubp \
	fsubr fsubrp ftst fwait fxam fxch fxtract fyl2x fyl2xp1 \
	fsetpm fcos fldenvd fnsaved fnstenvd fprem1 frstord fsaved fsin fsincos \
	fstenvd fucom fucomp fucompp fcomi fcomip ffreep \
	fcmovb fcmove fcmovbe fcmovu fcmovnb fcmovne fcmovnbe fcmovnu


ext_instruction=addpd addps addsd addss andpd andps andnpd andnps \
	cmpeqpd cmpltpd cmplepd cmpunordpd cmpnepd cmpnltpd cmpnlepd cmpordpd \
	cmpeqps cmpltps cmpleps cmpunordps cmpneps cmpnltps cmpnleps cmpordps \
	cmpeqsd cmpltsd cmplesd cmpunordsd cmpnesd cmpnltsd cmpnlesd cmpordsd \
	cmpeqss cmpltss cmpless cmpunordss cmpness cmpnltss cmpnless cmpordss \
	comisd comiss cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps \
	cvtpi2pd cvtpi2ps cvtps2dq cvtps2pd cvtps2pi cvtss2sd cvtss2si \
	cvtsd2si cvtsd2ss cvtsi2sd cvtsi2ss \
	cvttpd2dq cvttpd2pi cvttps2dq cvttps2pi cvttsd2si cvttss2si \
	divpd divps divsd divss fxrstor fxsave ldmxscr lfence mfence \
	maskmovdqu maskmovdq maxpd maxps paxsd maxss minpd minps minsd minss \
	movapd movaps movdq2q movdqa movdqu movhlps movhpd movhps movd movq \
	movlhps movlpd movlps movmskpd movmskps movntdq movnti movntpd movntps \
	movntq movq2dq movsd movss movupd movups mulpd mulps mulsd mulss \
	orpd orps packssdw packsswb packuswb paddb paddsb paddw paddsw \
	paddd paddsiw paddq paddusb paddusw pand pandn pause paveb pavgb pavgw \
	pavgusb pdistib pextrw pcmpeqb pcmpeqw pcmpeqd pcmpgtb pcmpgtw pcmpgtd \
	pf2id pf2iw pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul \
	pmachriw pmaddwd pmagw pmaxsw pmaxub pminsw pminub pmovmskb \
	pmulhrwc pmulhriw pmulhrwa pmulhuw pmulhw pmullw pmuludq \
	pmvzb pmvnzb pmvlzb pmvgezb pfnacc pfpnacc por prefetch prefetchw \
	prefetchnta prefetcht0 prefetcht1 prefetcht2 pfrcp pfrcpit1 pfrcpit2 \
	pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pf2iw pinsrw psadbw pshufd \
	pshufhw pshuflw pshufw psllw pslld psllq pslldq psraw psrad \
	psrlw psrld psrlq psrldq psubb psubw psubd psubq psubsb psubsw \
	psubusb psubusw psubsiw pswapd punpckhbw punpckhwd punpckhdq punpckhqdq \
	punpcklbw punpcklwd punpckldq punpcklqdq pxor rcpps rcpss \
	rsqrtps rsqrtss sfence shufpd shufps sqrtpd sqrtps sqrtsd sqrtss \
	stmxcsr subpd subps subsd subss ucomisd ucomiss \
	unpckhpd unpckhps unpcklpd unpcklps xorpd xorps

register=ah al ax bh bl bp bx ch cl cr0 cr2 cr3 cr4 cs \
	cx dh di dl dr0 dr1 dr2 dr3 dr6 dr7 ds dx eax ebp ebx ecx edi edx \
	es esi esp fs gs si sp ss st tr3 tr4 tr5 tr6 tr7 \
	st0 st1 st2 st3 st4 st5 st6 st7 mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 \
	xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7


directive=.186 .286 .286c .286p .287 .386 .386c .386p .387 .486 .486p \
	.8086 .8087 .alpha .break .code .const .continue .cref .data .data?  \
	.dosseg .else .elseif .endif .endw .err .err1 .err2 .errb \
	.errdef .errdif .errdifi .erre .erridn .erridni .errnb .errndef \
	.errnz .exit .fardata .fardata? .if .lall .lfcond .list .listall \
	.listif .listmacro .listmacroall  .model .no87 .nocref .nolist \
	.nolistif .nolistmacro .radix .repeat .sall .seq .sfcond .stack \
	.startup .tfcond .type .until .untilcxz .while .xall .xcref \
	.xlist alias align assume catstr comm comment db dd df dosseg dq \
	dt dup dw echo else elseif elseif1 elseif2 elseifb elseifdef elseifdif \
	elseifdifi elseife elseifidn elseifidni elseifnb elseifndef end \
	endif endm endp ends eq equ even exitm extern externdef extrn for \
	forc ge goto group gt high highword if if1 if2 ifb ifdef ifdif \
	ifdifi ife  ifidn ifidni ifnb ifndef include includelib instr invoke \
	irp irpc label le length lengthof local low lowword lroffset \
	lt macro mask mod .msfloat name ne offset opattr option org %out \
	page popcontext proc proto ptr public purge pushcontext record \
	repeat rept seg segment short size sizeof sizestr struc struct \
	substr subtitle subttl textequ this title type typedef union while width

directive_operand=$ ? @b @f addr basic byte c carry? dword \
	far far16 fortran fword near near16 overflow? parity? pascal qword  \
	real4  real8 real10 sbyte sdword sign? stdcall sword syscall tbyte \
	vararg word zero? flat near32 far32 \
	abs all assumes at casemap common compact \
	cpu dotname emulator epilogue error export expr16 expr32 farstack flat \
	forceframe huge language large listing ljmp loadds m510 medium memory \
	nearstack nodotname noemulator nokeyword noljmp nom510 none nonunique \
	nooldmacros nooldstructs noreadonly noscoped nosignextend nothing \
	notpublic oldmacros oldstructs os_dos para private prologue radix \
	readonly req scoped setif2 smallstack tiny use16 use32 uses \


directive_nasm=db dw dd dq dt resb resw resd resq rest incbin equ times \
	%define %idefine %xdefine %xidefine %undef %assign %iassign \
	%strlen %substr %macro %imacro %endmacro %rotate .nolist \
	%if %elif %else %endif %ifdef %ifndef %elifdef %elifndef \
	%ifmacro %ifnmacro %elifmacro %elifnmacro %ifctk %ifnctk %elifctk %elifnctk \
	%ifidn %ifnidn %elifidn %elifnidn %ifidni %ifnidni %elifidni %elifnidni \
	%ifid %ifnid %elifid %elifnid %ifstr %ifnstr %elifstr %elifnstr \
	%ifnum %ifnnum %elifnum %elifnnum %error %rep %endrep %exitrep \
	%include %push %pop %repl struct endstruc istruc at iend align alignb \
	%arg %stacksize %local %line \
	bits use16 use32 section absolute extern global common cpu org \
	section group import export

directive_operand_nasm=a16 a32 o16 o32 byte word dword nosplit $ $$ seq wrt \
	flat large small .text .data .bss near far \
	%0 %1 %2 %3 %4 %5 %6 %7 %8 %9


keywords.$(file.patterns.asm)=$(cpu_instruction) $(cpu_instruction2)
keywords2.$(file.patterns.asm)=$(fpu_instruction)
keywords3.$(file.patterns.asm)=$(register)
keywords4.$(file.patterns.asm)=$(directive) $(directive_nasm)
keywords5.$(file.patterns.asm)=$(directive_operand) $(directive_operand_nasm)
keywords6.$(file.patterns.asm)=$(ext_instruction)

comment.block.asm=;


style.asm.32=fore:#808080,font:Verdana,size:8
style.asm.0=
style.asm.1=fore:#adadad
style.asm.2=fore:#ff0000
style.asm.3=$(colour.string)
style.asm.4=$(colour.operator),bold
style.asm.5=
style.asm.6=$(colour.keyword),bold
style.asm.7=fore:#0000ff
style.asm.8=fore:#46aa03,bold
style.asm.9=fore:#0000ff
style.asm.10=fore:#0000ff
style.asm.11=$(colour.code.comment.box),$(font.code.comment.box)
style.asm.12=$(colour.char)
style.asm.13=fore:#000000,back:#E0C0E0,eolfilled
style.asm.14=fore:#B00040


command.compile.$(file.patterns.asm)=masm $(FileNameExt)

command.name.0.*.asm=Link
command.0.*.asm=link $(FileName)


statement.indent.$(file.patterns.asm)=9 .if
statement.end.$(file.patterns.asm)=9 .endif

autoit3dir=c:\program files\autoit3

file.patterns.au3=*.au3
filter.au3=AutoIt (au3)|*.au3|
lexer.$(file.patterns.au3)=au3

command.compile.*.au3=$(autoit3dir)\aut2exe\aut2exe.exe /in "$(FilePath)"
command.build.*.au3=$(autoit3dir)\aut2exe\aut2exe.exe /in "$(FilePath)"
command.go.*.au3=$(autoit3dir)\autoit3.exe "$(FilePath)"
command.help.*.au3=$(CurrentWord)!$(autoit3dir)\autoit.chm
command.help.subsystem.*.au3=4
api.*.au3=$(SciteDefaultHome)\api\au3.api
calltip.au3.word.characters=$(chars.alpha)$(chars.numeric)
calltip.au3.ignorecase=1
autocomplete.au3.ignorecase=1
indent.size.*.au3=3
statement.indent.*.au3=5 case if do for else while select
statement.end.*.au3=
block.start.*.au3=5 case if do for else while select
block.end.*.au3=5 else endif endselect next until wend

keywordclass.au3=#ce #cs #comments_end #comments_start #include #include-once \
and byref case continueloop dim do else elseif endfunc endif \
endselect exit exitloop for func global if local next not or return select step then to until wend while
keywords.$(file.patterns.au3)=$(keywordclass.au3)

keywords2.$(file.patterns.au3)=abs acos adlibdisable adlibenable asc asin atan autoitsetoption autoitwingettitle autoitwinsettitle \
bitand bitnot bitor bitshift bitxor blockinput break call cdtray chr clipget clipput controlclick controlcommand \
controldisable controlenable controlfocus controlgetfocus controlgetpos controlgettext controlhide controlmove \
controlsend controlsettext controlshow cos dec dircopy dircreate dirmove dirremove drivegetdrive drivegetfilesystem \
drivegetlabel drivegetserial drivegettype drivesetlabel drivespacefree drivespacetotal drivestatus envget envset \
envupdate eval exp filechangedir fileclose filecopy filecreateshortcut filedelete fileexists filefindfirstfile \
filefindnextfile filegetattrib filegetlongname filegetshortname filegetsize filegettime filegetversion fileinstall \
filemove fileopen fileopendialog fileread filereadline filerecycle filesavedialog fileselectfolder filesetattrib \
filesettime filewrite filewriteline hex hotkeyset inidelete iniread iniwrite inputbox int isadmin isarray isdeclared \
isfloat isint isnumber isstring log memgetstats mod mouseclick mouseclickdrag mousedown mousegetcursor mousegetpos \
mousemove mouseup msgbox number pixelgetcolor pixelsearch processclose processexists processwait processwaitclose \
progressoff progresson progressset random regdelete regread regwrite round run runasset runwait send seterror \
shutdown sin sleep soundplay soundsetwavevolume splashimageon splashoff splashtexton sqrt statusbargettext string \
stringaddcr stringformat stringinstr stringisalnum stringisalpha stringisascii stringisdigit stringisfloat stringisint \
stringislower stringisspace stringisupper stringisxdigit stringleft stringlen stringlower stringmid stringreplace \
stringright stringsplit stringstripcr stringstripws stringtrimleft stringtrimright stringupper tan timerstart \
timerstop tooltip traytip ubound urldownloadtofile winactivate winactive winclose winexists wingetcaretpos \
wingetclasslist wingetclientsize wingethandle wingetpos wingetstate wingettext wingettitle winkill winmenuselectitem \
winminimizeall winminimizeallundo winmove winsetontop winsetstate winsettitle winwait winwaitactive winwaitclose \
winwaitnotactive

keywords3.$(file.patterns.au3)= @appdatacommondir @appdatadir @autoitversion @commonfilesdir @compiled \
@computername @comspec @cr @crlf @desktopcommondir @desktopdir @desktopheight @desktopwidth @documentscommondir @error \
@favoritescommondir @favoritesdir @homedrive @homepath \
@homeshare @hour @ipaddress1 @ipaddress2 @ipaddress3 @ipaddress4 @lf @logondnsdomain \
@logondomain @logonserver @mday @min @mon @mydocumentsdir @osbuild @oslang @osservicepack \
@ostype @osversion @programfilesdir @programscommondir @programsdir @scriptdir @scriptfullpath @scriptname @sec \
@startmenucommondir @startmenudir @startupcommondir @startupdir @sw_hide @sw_maximize @sw_minimize @sw_restore @sw_show \
@systemdir @tab @tempdir @username @userprofiledir @wday @windowsdir @workingdir @yday @year @year

keywords4.$(file.patterns.au3)= {!} {#} {^} {{} {}} {+} {alt} {altdown} {appskey} {asc nnnn} {backspace} {browser_back} {browser_favorites} \
{browser_forward} {browser_home} {browser_refresh} {browser_search} {browser_stop} {capslock} {ctrlbreak} \
{ctrldown} {delete} {down} {end} {enter} {escape} {f1} {f10} {f11} {f12} {f2} {f3} {f4} {f5} {f6} {f7} {f8} {f9} \
{home} {insert} {lalt} {launch_app1} {launch_app2} {launch_mail} {launch_media} {lctrl} {left} {lshift} {lwin} \
{lwindown} {media_next} {media_play_pause} {media_prev} {media_stop} {numlock} \
{numpad0} {numpad1} {numpad2} {numpad3} {numpad4} {numpad5} {numpad6} {numpad7} {numpad8} {numpad9} \
{numpadadd} {numpaddiv} {numpaddot} {numpadenter} {numpadmult} {numpadsub} {pause} {pgdn} {pgup} \
{printscreen} {ralt} {rctrl} {right} {rshift} {rwin} {rwindown} {shiftdown} {sleep} {space} {tab} {up} \
{volume_down} {volume_mute} {volume_up}




style.au3.0=fore:#000000,$(font.au3s)

style.au3.1=fore:#009933,italics

style.au3.2=fore:#669900,italics

style.au3.3=fore:#CC0099,bold

style.au3.4=fore:#000090,bold,italics

style.au3.5=fore:#0000FF,bold

style.au3.6=fore:#FF33FF,bold

style.au3.7=fore:#9999CC,bold

style.au3.8=fore:#FF0000,bold

style.au3.9=fore:#AA0000,bold

style.au3.10=fore:#FF8800,bold

filter.ave=AVE (ave)|*.ave|


file.patterns.ave=*.ave

lexer.*.ave=ave
lexer.$(file.patterns.ave)=ave


keywords.$(file.patterns.ave)=nil true false else for if while then elseif end av self in exit
word.chars.ave=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.ave)=$(word.chars.ave)

statement.indent.$(file.patterns.ave)=1 else for if while then
statement.end.$(file.patterns.ave)=1 end
statement.lookback.$(file.patterns.ave)=1 end



comment.block.ave='--

comment.box.start.ave='--
comment.box.middle.ave='--
comment.box.end.ave='--
autocomplete.ave.ignorecase=1
calltip.ave.ignorecase=1
autocomplete.ave.start.characters=.
calltip.ave.word.characters=.$(word.chars.ave)

style.ave.32=$(font.code.base),fore:#000000
style.ave.0=fore:#FF0000
style.ave.1=$(colour.code.comment.line),$(font.code.comment.line)
style.ave.2=$(colour.number),bold
style.ave.3=$(colour.keyword),bold
style.ave.6=$(colour.string)
style.ave.7=$(colour.preproc),bold
style.ave.8=back:#E0C0E0,eolfilled
style.ave.10=$(colour.operator)
style.ave.9=$(font.code.base),fore:#000000
style.ave.12=$(font.code.base),fore:#003355,bold
style.ave.13=$(font.code.base),fore:#005533,bold
style.ave.14=$(colour.keyword)
style.ave.15=$(colour.keyword)
style.ave.16=$(colour.keyword)
braces.ave.style=10


avenue=ave "$(FilePath)"
avenueGo=avego "$(FilePath)"
avenueBuild=avebuild "$(FilePath)"





file.patterns.baan=*.bc;*.cln

filter.baan=Baan (baan)|$(file.patterns.baan)|

lexer.$(file.patterns.baan)=baan

word.characters.$(file.patterns.baan)=$(chars.alpha)$(chars.numeric)_#.$
calltip.baan.word.characters="._0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$"
autocomplete.baan.ignorecase=1
calltip.baan.ignorecase=1

preprocessor.symbol.$(file.patterns.baan)=#
preprocessor.start.$(file.patterns.baan)=if ifdef ifndef
preprocessor.middle.$(file.patterns.baan)=else elif
preprocessor.end.$(file.patterns.baan)=endif

keywordclass.baan=
keywords.$(file.patterns.baan)=$(keywordclass.baan)

comment.block.baan=|
comment.box.start.baan=|
comment.box.middle.baan=|
comment.box.end.baan=|
comment.stream.start.baan=DllUsage
comment.stream.end.baan=EndDllUsage



colour.baan.operator=fore:#B06000

style.baan.32=$(font.monospace)
style.baan.0=fore:#808080,$(font.monospace)
style.baan.1=$(colour.code.comment.line),$(font.monospace)
style.baan.2=fore:#007F7F,$(font.comment)
style.baan.3=$(colour.number),$(font.monospace)
style.baan.4=$(colour.keyword),bold,$(font.monospace)
style.baan.5=$(colour.string),$(font.monospace)
style.baan.6=$(colour.preproc),$(font.monospace)
style.baan.7=$(colour.operator),bold,$(font.monospace)
style.baan.8=$(font.monospace)
style.baan.9=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.baan.10=fore:#B00040,$(font.monospace)
braces.baan.style=10

statement.indent.$(file.patterns.baan)=5 after.choice  after.commit.transaction  after.delete  \
after.display  after.field  \
after.form  after.input  after.program  after.read  after.rewrite  \
after.group  after.skip.delete  after.skip.rewrite  after.skip.write  \
after.update.db.commit  after.write  after.zoom  \
before.checks  before.choice  before.delete  before.display  \
before.display.object  before.field  before.form  before.input  before.layout  \
before.group before.program  before.read  before.rewrite  before.write  before.zoom  \
case check.input  declaration  default  dllusage  \
else  elseif  functions  if  on.input  on.entry  on.exit \
read.view  ref.input  ref.display selectdo  selectempty  selecteos \
when.field.changes  while

statement.end.$(file.patterns.baan)=1 endif endwhile endfor endselect return
statement.lookback.$(file.patterns.baan)=1 endif endwhile endfor endselect return
filter.bullant=Bullant (.ant)|*.ant|

file.patterns.bullant=*.ant

lexer.$(file.patterns.bullant)=bullant

keywordclass.bullant=abstract all ancestor and application \
assert attributes author \
begin \
callback class concrete config constants construct continue \
depends description downcast driver \
elif else ensures error exception exposure extension \
false fatal final function \
generics glyph \
help hidden host \
immutable in inherits is \
kernel \
label leave library locals \
mutable \
none not null \
obsolete options or other \
parameters peer private public \
raise reason restricted retry return \
returns rollback route \
security self settings severity step \
task test transaction true \
unknown \
varying \
warning when \
method end if until while trap case debug for foreach lock \
boolean \
character character$ \
date date$ datetime datetime$ \
float \
hex$ \
identifier identifier$ integer interval interval$ \
money money$ \
raw raw$ \
string \
tick tick$ time time$ \
version version$


keywords.$(file.patterns.bullant)=$(keywordclass.bullant)

style.bullant.0=fore:#000000,$(font.monospace)
style.bullant.1=fore:#007F00,$(font.monospace)
style.bullant.2=fore:#007F00,$(font.monospace)
style.bullant.3=fore:#7F7F7F
style.bullant.4=fore:#007F7F


style.bullant.5=fore:#00007F,bold
style.bullant.6=fore:#7F007F,$(font.monospace)
style.bullant.7=fore:#7F007F,$(font.monospace)
style.bullant.8=fore:#007F7F
style.bullant.9=fore:#7F7F00

command.compile.*.ant=

command.go.*.ant=
command.go.subsystem.*.ant=

command.build.*.ant=
command.build.subsystem.*.ant=


filter.conf=Apache Conf (conf)|*.conf|
file.patterns.conf=*.conf
lexer.$(file.patterns.conf)=conf

keywords.$(file.patterns.conf)=\
accessconfig accessfilename action addalt \
addaltbyencoding addaltbytype addcharset \
adddefaultcharset adddescription \
addencoding addhandler addicon addiconbyencoding \
addiconbytype addlanguage addmodule addmoduleinfo \
addtype agentlog alias aliasmatch \
allow allowconnect allowoverride anonymous \
anonymous_authoritative anonymous_logemail anonymous_mustgiveemail \
anonymous_nouserid anonymous_verifyemail authauthoritative \
authdbauthoritative authdbgroupfile authdbmauthoritative \
authdbmgroupfile authdbmgroupfile authdbuserfile authdbmuserfile \
authdigestfile authgroupfile authname authtype \
authuserfile bindaddress browsermatch browsermatchnocase \
bs2000account cachedefaultexpire cachedirlength cachedirlevels \
cacheforcecompletion cachegcinterval cachelastmodifiedfactor cachemaxexpire \
cachenegotiateddocs cacheroot cachesize checkspelling \
clearmodulelist contentdigest cookieexpires cookielog \
cookielog cookietracking coredumpdirectory customlog \
defaulticon defaultlanguage defaulttype define \
deny directory directorymatch directoryindex \
documentroot errordocument errorlog example \
expiresactive expiresbytype expiresdefault extendedstatus \
fancyindexing files filesmatch forcetype \
group header headername hostnamelookups \
identitycheck ifdefine ifmodule imapbase \
imapdefault imapmenu include indexignore \
indexoptions keepalive keepalivetimeout languagepriority \
limit limitexcept limitrequestbody limitrequestfields \
limitrequestfieldsize limitrequestline listen listenbacklog \
loadfile loadmodule location locationmatch \
lockfile logformat loglevel maxclients \
maxkeepaliverequests maxrequestsperchild maxspareservers metadir \
metafiles metasuffix mimemagicfile minspareservers \
mmapfile namevirtualhost nocache options order \
passenv pidfile port proxyblock proxydomain \
proxypass proxypassreverse proxyreceivebuffersize proxyremote \
proxyrequests proxyvia qsc readmename \
redirect redirectmatch redirectpermanent redirecttemp \
refererignore refererlog removehandler require \
resourceconfig rewritebase rewritecond rewriteengine \
rewritelock rewritelog rewriteloglevel rewritemap \
rewriteoptions rewriterule rlimitcpu rlimitmem \
rlimitnproc satisfy scoreboardfile script \
scriptalias scriptaliasmatch scriptinterpretersource scriptlog \
scriptlogbuffer scriptloglength sendbuffersize \
serveradmin serveralias servername serverpath \
serverroot serversignature servertokens servertype \
setenv setenvif setenvifnocase sethandler \
singlelisten startservers threadsperchild timeout \
transferlog typesconfig unsetenv usecanonicalname \
user userdir virtualhost virtualdocumentroot \
virtualdocumentrootip virtualscriptalias virtualscriptaliasip \
xbithack from all


keywords2.$(file.patterns.conf)=\
on off standalone inetd \
force-response-1.0 downgrade-1.0 nokeepalive \
indexes includes followsymlinks none \
x-compress x-gzip

style.conf.0=fore:#808080,$(font.base)
style.conf.1=fore:#007F00,$(font.comment)
style.conf.2=fore:#007F7F
style.conf.9=fore:#00007F,bold
style.conf.4=fore:#000000,back:#FFE0FF
style.conf.5=fore:#000000,back:#FFE0FF
style.conf.6=fore:#7F007F,$(font.monospace)
style.conf.7=bold
style.conf.8=fore:#007F7F,bold
style.conf.3=fore:#000000,back:#A0FFA0

command.compile.$(file.patterns.conf)=httpd -t -f $(FilePath)
command.build.$(file.patterns.conf)=httpd -t -f $(FilePath)





file.patterns.cpp=*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hpp;*.hxx;*.sma
file.patterns.test=*.pln;*.inc;*.t
file.patterns.cs=*.cs
file.patterns.rc=*.rc;*.rc2;*.dlg
file.patterns.idl=*.idl;*.odl
file.patterns.c.like=$(file.patterns.cpp);$(file.patterns.cs);$(file.patterns.idl);*.java
file.patterns.as=*.as

filter.cpp=C/C++ (c cc cpp cxx cs h hh hxx hpp dlg rc rc2 mak)|\
$(file.patterns.cpp);$(file.patterns.rc);*.mak;make*|
filter.java=Java (java)|*.java|
filter.js=JavaScript (js)|*.js|
filter.idl=IDL (idl odl)|$(file.patterns.idl)|
filter.test=SilkTest (pln inc t)|$(file.patterns.test)|
filter.as=ActionScript (as)|*.as|

file.patterns.braces=$(file.patterns.cpp);$(file.patterns.idl);*.java;$(file.patterns.cs);$(file.patterns.test)

lexer.*.java=cpp
lexer.$(file.patterns.cpp)=cpp
lexer.$(file.patterns.rc)=cpp
lexer.$(file.patterns.idl)=cpp
lexer.$(file.patterns.cs)=cpp
lexer.*.js=cpp
lexer.$(file.patterns.test)=cpp
lexer.*.as=cpp

keywordclass.cpp=and and_eq asm auto bitand bitor bool break \
case catch char class compl const const_cast continue \
default delete do double dynamic_cast else enum explicit export extern false float for \
friend goto if inline int long mutable namespace new not not_eq \
operator or or_eq private protected public \
register reinterpret_cast return short signed sizeof static static_cast struct switch \
template this throw true try typedef typeid typename union unsigned using \
virtual void volatile wchar_t while xor xor_eq
keywords.$(file.patterns.cpp)=$(keywordclass.cpp)
keywords3.$(file.patterns.cpp)=a addindex addtogroup anchor arg attention \
author b brief bug c class code date def defgroup deprecated dontinclude \
e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception \
f$ f[ f] file fn hideinitializer htmlinclude htmlonly \
if image include ingroup internal invariant interface latexonly li line link \
mainpage name namespace nosubgrouping note overload \
p page par param post pre ref relates remarks return retval \
sa section see showinitializer since skip skipline struct subsection \
test throw todo typedef union until \
var verbatim verbinclude version warning weakgroup $ @ \ & < > # { }

word.chars.cxx=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.cpp)=$(word.chars.cxx)
comment.block.cpp=//~
comment.stream.start.cpp=/*
comment.stream.end.cpp=*/
comment.box.start.cpp=/*
comment.box.middle.cpp= *
comment.box.end.cpp= */
fold.comment=1
fold.preprocessor=1

statement.indent.$(file.patterns.c.like)=5 case catch class default do else for if \
private protected public struct try union while
statement.end.$(file.patterns.c.like)=10 ;
statement.lookback.$(file.patterns.c.like)=20
block.start.$(file.patterns.c.like)=10 {
block.end.$(file.patterns.c.like)=10 }


preprocessor.symbol.$(file.patterns.cpp)=#
preprocessor.start.$(file.patterns.cpp)=if ifdef ifndef
preprocessor.middle.$(file.patterns.cpp)=else elif
preprocessor.end.$(file.patterns.cpp)=endif

keywordclass.cs=abstract as base bool break byte case catch char checked class \
const continue decimal default delegate do double else enum \
event explicit extern false finally fixed float for foreach goto if \
implicit in int interface internal is lock long namespace new null \
object operator out override params private protected public \
readonly ref return sbyte sealed short sizeof stackalloc static \
string struct switch this throw true try typeof uint ulong \
unchecked unsafe ushort using virtual void while
keywords.$(file.patterns.cs)=$(keywordclass.cs)
word.characters.$(file.patterns.cs)=$(word.chars.cxx)

keywordclass.rc=\
ACCELERATORS ALT AUTO3STATE AUTOCHECKBOX AUTORADIOBUTTON \
BEGIN BITMAP BLOCK BUTTON CAPTION CHARACTERISTICS CHECKBOX CLASS \
COMBOBOX CONTROL CTEXT CURSOR DEFPUSHBUTTON DIALOG DIALOGEX DISCARDABLE \
EDITTEXT END EXSTYLE FONT GROUPBOX ICON LANGUAGE LISTBOX LTEXT \
MENU MENUEX MENUITEM MESSAGETABLE POPUP \
PUSHBUTTON RADIOBUTTON RCDATA RTEXT SCROLLBAR SEPARATOR SHIFT STATE3 \
STRINGTABLE STYLE TEXTINCLUDE VALUE VERSION VERSIONINFO VIRTKEY
keywords.$(file.patterns.rc)=$(keywordclass.rc)

keywordclass.idl=\
aggregatable allocate appobject arrays async async_uuid \
auto_handle \
bindable boolean broadcast byte byte_count \
call_as callback char coclass code comm_status \
const context_handle context_handle_noserialize \
context_handle_serialize control cpp_quote custom \
decode default defaultbind defaultcollelem \
defaultvalue defaultvtable dispinterface displaybind dllname \
double dual \
enable_allocate encode endpoint entry enum error_status_t \
explicit_handle \
fault_status first_is float \
handle_t heap helpcontext helpfile helpstring \
helpstringcontext helpstringdll hidden hyper \
id idempotent ignore iid_as iid_is immediatebind implicit_handle \
import importlib in include in_line int __int64 __int3264 interface \
last_is lcid length_is library licensed local long \
max_is maybe message methods midl_pragma \
midl_user_allocate midl_user_free min_is module ms_union \
ncacn_at_dsp ncacn_dnet_nsp ncacn_http ncacn_ip_tcp \
ncacn_nb_ipx ncacn_nb_nb ncacn_nb_tcp ncacn_np \
ncacn_spx ncacn_vns_spp ncadg_ip_udp ncadg_ipx ncadg_mq \
ncalrpc nocode nonbrowsable noncreatable nonextensible notify \
object odl oleautomation optimize optional out out_of_line \
pipe pointer_default pragma properties propget propput propputref \
ptr public \
range readonly ref represent_as requestedit restricted retval \
shape short signed size_is small source strict_context_handle \
string struct switch switch_is switch_type \
transmit_as typedef \
uidefault union unique unsigned user_marshal usesgetlasterror uuid \
v1_enum vararg version void wchar_t wire_marshal

keywordclass.msidl=handle
keywordclass.xpidl=attribute native noscript scriptable shared wstring inout
keywords.$(file.patterns.idl)=$(keywordclass.idl) $(keywordclass.xpidl)

keywordclass.java=abstract assert boolean break byte case catch char class \
const continue default do double else extends final finally float for future \
generic goto if implements import inner instanceof int interface long \
native new null outer package private protected public rest \
return short static super switch synchronized this throw throws \
transient try var void volatile while
keywords.*.java=$(keywordclass.java)

keywordclass.javascript=abstract boolean break byte case catch char class \
const continue debugger default delete do double else enum export extends \
final finally float for function goto if implements import in instanceof \
int interface long native new package private protected public \
return short static super switch synchronized this throw throws \
transient try typeof var void volatile while with
keywords.*.js=$(keywordclass.javascript)

keywordclass.actionscript=add and break case class continue default delete \
dynamic else eq extends false for function ge get gt if implements import in \
instanceof interface intrinsic le lt ne new not null on or private public \
return set static switch super this true typeof undefined var void while with

keywordclass2.actionscript=__proto__ _alpha _currentframe _droptarget \
_focusrect _framesloaded _global _height _highquality _level _name \
_parent _quality _root _rotation _soundbuftime _target _totalframes \
_url _visible _width _x _xmouse _xscale _y _ymouse _yscale Arguments \
Array asfunction BACKSPACE Boolean Button call Camera CAPSLOCK chr \
clearInterval Color CONTROL CustomActions data Date DELETEKEY DOWN \
dragOut dragOver END ENTER enterFrame escape ESCAPE eval evaluate \
FCheckBox FComboBox FListBox FPushButton FRadioButton fscommand \
FScrollBar FScrollPane FStyleFormat Function getProperty getTimer \
getURL getVersion gotoAndPlay gotoAndStop HOME ifFrameLoaded inFinite \
INSERT int isNaN Key keyDown keyPress keyUp LEFT load loadMovie \
loadMovieNum loadVariablesNum LoadVars LocalConnection LocalConnection \
Math mbchr mblength mbord mbsubstring Microphone Mouse mouseDown \
mouseMove mouseUp MovieClip NaN nextFrame nextScene Number Object \
onClipEvent ord parseFloat parseInt PGDN PGUP play press prevScene \
print printAsBitmap printAsBitmapNum printNum prototype random \
release releaseOutside removeMovieClip RIGHT rollOut rollOver \
Selection set setInterval setProperty SharedObject SHIFT Sound \
SPACE String System Tab targetPath tellTarget toggleHighQuality \
trace trace unescape unload unloadMovie unloadMovieNum UP \
updateAfterEvent Void XML XMLSocket

keywords.*.as=$(keywordclass.actionscript)
keywords2.*.as=$(keywordclass2.actionscript)


style.cpp.32=$(font.base)
style.cpp.0=fore:#808080
style.cpp.1=$(colour.code.comment.box),$(font.code.comment.box)
style.cpp.2=$(colour.code.comment.line),$(font.code.comment.line)
style.cpp.3=$(colour.code.comment.doc),$(font.code.comment.doc)
style.cpp.4=$(colour.number)
style.cpp.5=$(colour.keyword),bold
style.cpp.6=$(colour.string)
style.cpp.7=$(colour.char)
style.cpp.8=fore:#804080
style.cpp.9=$(colour.preproc)
style.cpp.10=$(colour.operator),bold
style.cpp.11=
style.cpp.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.cpp.13=fore:#007F00,$(font.monospace),back:#E0FFE0,eolfilled
style.cpp.14=fore:#3F7F3F,$(font.monospace),back:#E0F0FF,eolfilled
style.cpp.15=$(colour.code.comment.doc),$(font.code.comment.doc)
style.cpp.16=fore:#B00040
style.cpp.17=fore:#3060A0,$(font.code.comment.doc)
style.cpp.18=fore:#804020,$(font.code.comment.doc)
braces.cpp.style=10

cc=g++ -pedantic -Os -fno-exceptions -c $(FileNameExt) -o $(FileName).o

make.command=make
command.compile.*.c=$(cc)
command.build.*.c=$(make.command)
command.go.*.c=$(FileName)

command.compile.*.cc=$(cc)
command.build.*.cc=$(make.command)
command.go.*.cc=$(FileName)

command.compile.*.cpp=$(cc)
command.build.*.cpp=$(make.command)
command.go.*.cpp=$(FileName)

command.compile.*.cxx=$(cc)
command.build.*.cxx=$(make.command)
command.go.*.cxx=$(FileName)

command.build.*.h=$(make.command)

command.name.0.*.cxx=Indent
command.0.*.cxx=astyle -tapO $(FileNameExt)
command.is.filter.0.*.cxx=1

command.name.1.*.cxx=Lint
command.1.*.cxx=g++ -W -Wall -Wshadow -Wwrite-strings -Wold-style-cast \
	-Woverloaded-virtual  -pedantic -Os -fno-exceptions -c $(FileNameExt)

command.name.2.*.cxx=Execute Selection
command.2.*.cxx=$(CurrentSelection)

if PLAT_WIN
	command.compile.*.rc=windres $(FileNameExt) $(FileName).o
	command.build.*.rc=$(make.command)
	command.help.$(file.patterns.cpp)=$(CurrentWord)!G:\Program Files\Microsoft Visual Studio\MSDN98\98VSa\1033\MSDNVS6A.COL
	command.help.subsystem.$(file.patterns.cpp)=4
	command.go.*.js=cscript /nologo $(FileNameExt)

if PLAT_GTK
	command.help.$(file.patterns.cpp)=man $(CurrentWord) | col -b

if PLAT_WIN
	command.build.*.cs=csc /t:winexe $(FileNameExt) /r:system.dll,system.drawing.dll
	command.go.*.cs=$(FileName)
	command.go.subsystem.*.cs=1

command.compile.*.java=javac $(FileNameExt)
command.build.*.java=javac *.java
command.go.*.java=java $(FileName)


filter.css=CSS (css)|*.css|
lexer.*.css=css

keywordclass.css=\
left right top bottom position \
font-family font-style font-variant font-weight font-size font \
color background-color background-image background-repeat background-attachment background-position background \
word-spacing letter-spacing text-decoration vertical-align text-transform text-align text-indent line-height \
margin-top margin-right margin-bottom margin-left margin \
padding-top padding-right padding-bottom padding-left padding \
border-top-width border-right-width border-bottom-width border-left-width border-width \
border-top border-right border-bottom border-left border \
border-color border-style width height float clear \
display white-space list-style-type list-style-image list-style-position list-style

keywords.*.css=$(keywordclass.css)

keywordclass.css2=first-letter first-line active link visited
keywords2.*.css=$(keywordclass.css2)

word.characters.*.css=$(chars.alpha)$(chars.numeric)_-

comment.stream.start.css=/*
comment.stream.end.css=*/

style.css.0=fore:#000033,eolfilled
style.css.1=fore:#800000,bold
style.css.2=fore:#800000
style.css.3=fore:#800000
style.css.4=fore:#FF0000
style.css.5=fore:#000080,bold
style.css.6=fore:#000000
style.css.7=fore:#FF0000
style.css.8=fore:#800080
style.css.9=fore:#007F00,$(font.comment)
style.css.10=fore:#800000
style.css.11=fore:#0000FF
style.css.12=fore:#008000,bold
style.css.13=$(colour.string)
style.css.14=$(colour.string)

block.start.*.css=5 {
block.end.*.css=5 }

command.help.*.css="http://www.w3.org/TR/REC-CSS1#$(CurrentWord)"
command.help.subsystem.*.css=2

filter.eiffel=Eiffel (e)|*.e|

file.patterns.eiffel=*.e

lexer.$(file.patterns.eiffel)=eiffel

keywordclass.eiffel=\
alias all and any as bit boolean \
check class character clone create creation current \
debug deferred div do double \
else elseif end ensure equal expanded export external \
false feature forget from frozen general \
if implies indexing infix inherit inspect integer invariant is \
language like local loop mod name nochange none not \
obsolete old once or platform pointer prefix precursor \
real redefine rename require rescue result retry \
select separate string strip then true undefine unique until \
variant void when xor

keywords.$(file.patterns.eiffel)=$(keywordclass.eiffel)

style.eiffel.0=fore:#808080
style.eiffelkw.0=$(style.eiffel.0)
style.eiffel.1=$(colour.code.comment.line),$(font.code.comment.line)
style.eiffelkw.1=$(style.eiffel.1)
style.eiffel.2=$(colour.number)
style.eiffelkw.2=$(style.eiffel.2)
style.eiffel.3=$(colour.keyword),bold
style.eiffelkw.3=$(style.eiffel.3)
style.eiffel.4=$(colour.string),$(font.monospace)
style.eiffelkw.4=$(style.eiffel.4)
style.eiffel.5=$(colour.char),$(font.monospace)
style.eiffelkw.5=$(style.eiffel.5)
style.eiffel.6=$(colour.operator),bold
style.eiffelkw.6=$(style.eiffel.6)
style.eiffel.7=
style.eiffelkw.7=$(style.eiffel.7)
style.eiffel.8=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.eiffelkw.8=$(style.eiffel.8)
braces.eiffel.style=6
braces.eiffelkw.style=$(braces.eiffel.style)

statement.indent.$(file.patterns.eiffel)=5 do else elsif rescue if is loop
statement.end.$(file.patterns.eiffel)=10 ;
statement.lookback.$(file.patterns.eiffel)=20
block.start.$(file.patterns.eiffel)=10 check debug deferred do from if inspect once
block.end.$(file.patterns.eiffel)=10 end

command.compile.*.e=compile $(FileName)
file.patterns.erlang=*.erl

filter.erlang=Erlang (erl)|$(file.patterns.erlang)|

lexer.$(file.patterns.erlang)=erlang

keywordclass.erlang=\
after begin case catch cond end fun if let of query receive when \
define record export import include include_lib ifdef ifndef else endif undef \
apply attribute call do in letrec module primop try


keywords.$(file.patterns.erlang)=$(keywordclass.erlang)

comment.block.erlang=%~

style.erlang.0=fore:#000000
style.erlang.1=$(colour.code.comment.line),$(font.code.comment.line)
style.erlang.2=fore:#800040
style.erlang.3=$(colour.number)
style.erlang.4=$(colour.keyword),bold
style.erlang.5=$(colour.string)
style.erlang.6=$(colour.operator),bold
style.erlang.7=fore:#000080
style.erlang.8=fore:#ff0000
style.erlang.9=$(colour.char)
style.erlang.10=fore:#604000,bold
style.erlang.11=fore:#604000,bold
style.erlang.12=$(colour.error)
style.erlang.13=fore:#00a060,bold
style.erlang.31=$(colour.error)

ECOMPILEHOME=C:\Daten\Code\CVS Workspace\etheria-pol095\scripts

filter.escript=E-Script (src em)|$(file.patterns.escript)|
file.patterns.escript=*.src;*.em

lexer.$(file.patterns.escript)=escript
escript.case.sensitive=0


command.compile.*.src="$(ECOMPILEHOME)\ecompile.exe" $(FileNameExt)

style.escript.0=$(font.base)
style.escript.1=$(colour.code.comment.box),$(font.code.comment.box)
style.escript.2=$(colour.code.comment.line),$(font.code.comment.line)
style.escript.3=$(colour.code.comment.doc),$(font.code.comment.doc)
style.escript.4=$(colour.number)
style.escript.5=fore:#FF4000
style.escript.6=fore:#FF8000,$(font.string.literal)
style.escript.7=fore:#FF0000
style.escript.8=
style.escript.9=fore:#0000FF
style.escript.10=fore:#B00040
style.escript.11=fore:#B00040



keywords.$(file.patterns.escript)=\
basic basicio boats \
cfgfile \
file \
http \
npc \
os \
uo util \
accessible \
addmenuitem \
appendconfigfileelem \
applyconstraint \
applydamage \
applyrawdamage \
assignrecttoweatherregion \
append \
baseskilltorawskill \
boatfromitem \
broadcast \
ban \
cdbl \
cint \
cstr \
checklineofsight \
checklosat \
checkskill \
consumemana \
consumereagents \
consumesubstance \
createaccount \
createitematlocation \
createiteminbackpack \
createitemininventory \
createitemincontainer \
createmenu \
createmultiatlocation \
createnpcfromtemplate \
createrootiteminstoragearea \
createstoragearea \
clear_script_profile_counters \
close \
damage \
destroyitem \
destroymulti \
destroyrootiteminstoragearea \
detach \
disableevents \
disconnectclient \
distance \
disable \
enableevents \
enumerateitemsincontainer \
enumerateonlinecharacters \
equipfromtemplate \
equipitem \
eraseglobalproperty \
eraseobjproperty \
enable \
enabled \
erase \
events_waiting \
exists \
findconfigelem \
findobjtypeincontainer \
findrootiteminstoragearea \
findstoragearea \
fclose \
find \
fopen \
fread \
fseek \
ftell \
fwrite \
gamestat \
getamount \
getcommandhelp \
getconfigint \
getconfigintkeys \
getconfigmaxintkey \
getconfigreal \
getconfigstring \
getconfigstringkeys \
getconfigstringarray \
getelemproperty \
getequipmentbylayer \
getglobalproperty \
getharvestdifficulty \
getmapinfo \
getmenuobjtypes \
getobjproperty \
getobjtype \
getobjtypebyname \
getproperty \
getrawskill \
getregionstring \
getskill \
getspelldifficulty \
getstandingheight \
getworldheight \
grantprivilege \
harvestresource \
healdamage \
hex \
islegalmove \
insert \
keys \
listequippeditems \
listghostsnearlocation \
listhostiles \
listitemsatlocation \
listitemsnearlocation \
listitemsnearlocationoftype \
listmobilesinlineofsight \
listmobilesnearlocation \
listmobilesnearlocationex \
listobjectsinbox \
loadtusscpfile \
left \
len \
log_profile \
lower \
makeboundingbox \
move \
moveboat \
moveboatrelative \
movecharactertolocation \
moveitemtocontainer \
moveitemtolocation \
move_offline_mobiles \
openpaperdoll \
open \
pack \
performaction \
playlightningbolteffect \
playmovingeffect \
playmovingeffectxyz \
playobjectcenteredeffect \
playsoundeffect \
playsoundeffectprivate \
playstationaryeffect \
printtextabove \
printtextaboveprivate \
packages \
polcore \
position \
print \
queryparam \
randomdiceroll \
randomint \
rawskilltobaseskill \
readconfigfile \
readgameclock \
releaseitem \
registerforspeechevents \
registeritemwithboat \
requestinput \
reserveitem \
restartscript \
resurrect \
revokeprivilege \
runawayfrom \
runawayfromlocation \
runtoward \
runtowardlocation \
reverse \
run_script_to_completion \
saveworldstate \
selectmenuitem2 \
self \
sendbuywindow \
senddialoggump \
sendevent \
sendopenspecialcontainer \
sendpacket \
sendsellwindow \
sendskillwindow \
sendstringastipwindow \
sendsysmessage \
sendtextentrygump \
setanchor \
setglobalproperty \
setname \
setobjproperty \
setopponent \
setproperty \
setrawskill \
setregionlightlevel \
setregionweatherlevel \
setscriptcontroller \
setwarmode \
shutdown \
speakpowerwords \
splitwords \
startspelleffect \
subtractamount \
systemfindboatbyserial \
systemfindobjectbyserial \
say \
set_critical \
set_debug \
set_priority \
set_priority_divide \
set_script_option \
setcmdlevel \
setdex \
setint \
setlightlevel \
setmaster \
setname \
setpassword \
setstr \
shrink \
size \
sleep \
sleepms \
sort \
spendgold \
squelch \
start_script \
syslog \
system_rpm \
target \
targetcoordinates \
targetmultiplacement \
turnawayfrom \
turnawayfromlocation \
turnboat \
turntoward \
turntowardlocation \
toggle \
unloadconfigfile \
unpack \
unban \
unload_scripts \
upper \
walkawayfrom \
walkawayfromlocation \
walktoward \
walktowardlocation \
wander \
writehtml \
writehtmlraw \
wait_for_event \
movechar_forcelocation \
moveitem_forcelocation \
moveitem_normal \
scriptopt_debug \
scriptopt_no_interrupt \
scriptopt_no_runaway \
te_cancel_disable \
te_cancel_enable \
te_style_disable \
te_style_normal \
te_style_numerical \
tgtopt_check_los \
tgtopt_harmful \
tgtopt_helpful \
tgtopt_neutral \
tgtopt_nocheck_los \
setprop \
getprop


keywords2.$(file.patterns.escript)=\
array \
const \
dictionary \
global \
local \
var \
and \
default \
in \
next not \
or \
return \
to \
include \
use \
enum


keywords3.$(file.patterns.escript)=\
while \
for \
endfor \
function \
program \
endprogram endfunction \
foreach \
case \
else elseif \
if endcase endenum endforeach endif endwhile



file.patterns.forth=*.forth


lexer.$(file.patterns.forth)=forth

filter.forth=Forth files (f spf)|$(file.patterns.forth)|

word.characters.$(file.patterns.forth)=$(chars.alpha)$(chars.numeric)%-

comment.block.forth=\
comment.stream.start.forth=(
comment.stream.end.forth=)
comment.box.start.forth=\
comment.box.middle.forth=\
comment.box.end.forth=\
fold.comment=1
fold.preprocessor=1


keywords.$(file.patterns.forth)=\
AGAIN BEGIN CASE DO ELSE ENDCASE ENDOF IF LOOP OF REPEAT THEN UNTIL  WHILE \
[IF] [ELSE] [THEN] ?DO

keywords2.$(file.patterns.forth)=\
DUP DROP ROT SWAP OVER @ ! 2@ 2! 2DUP 2DROP 2SWAP 2OVER NIP R@ >R R> 2R@ 2>R 2R> \
0= 0< SP@ SP! W@ W! C@ C! < > = <> 0<>\
SPACE SPACES KEY? KEY THROW CATCH ABORT */ 2* /MOD CELL+ CELLS CHAR+ \
CHARS MOVE ERASE DABS TITLE HEX DECIMAL HOLD <# # #S #> SIGN \
D. . U. DUMP (.") >NUMBER ' IMMEDIATE EXIT RECURSE UNLOOP LEAVE HERE ALLOT , \
C, W, COMPILE, BRANCH, RET, LIT, DLIT, ?BRANCH, ", >MARK >RESOLVE1 <MARK >RESOLVE \
ALIGN ALIGNED USER-ALLOT USER-HERE HEADER DOES> SMUDGE HIDE :NONAME LAST-WORD \
?ERROR ERROR2 FIND1 SFIND SET-CURRENT GET-CURRENT DEFINITIONS GET-ORDER FORTH \
ONLY SET-ORDER ALSO PREVIOUS VOC-NAME. ORDER LATEST LITERAL 2LITERAL SLITERAL \
CLITERAL ?LITERAL1 ?SLITERAL1 HEX-LITERAL HEX-SLITERAL ?LITERAL2 ?SLITERAL2 SOURCE \
EndOfChunk CharAddr PeekChar IsDelimiter GetChar OnDelimiter SkipDelimiters OnNotDelimiter \
SkipWord SkipUpTo ParseWord NextWord PARSE SKIP CONSOLE-HANDLES REFILL DEPTH ?STACK \
?COMP WORD INTERPRET BYE QUIT MAIN1 EVALUATE INCLUDE-FILE INCLUDED >BODY +WORD \
WORDLIST CLASS! CLASS@ PAR! PAR@ ID. ?IMMEDIATE ?VOC IMMEDIATE VOC WordByAddrWl \
WordByAddr NLIST WORDS SAVE OPTIONS /notransl ANSI>OEM ACCEPT EMIT CR TYPE EKEY? \
EKEY EKEY>CHAR EXTERNTASK ERASE-IMPORTS ModuleName ModuleDirName ENVIRONMENT? \
DROP-EXC-HANDLER SET-EXC-HANDLER HALT ERR CLOSE-FILE CREATE-FILE CREATE-FILE-SHARED \
OPEN-FILE-SHARED DELETE-FILE FILE-POSITION FILE-SIZE OPEN-FILE READ-FILE REPOSITION-FILE \
DOS-LINES UNIX-LINES READ-LINE WRITE-FILE RESIZE-FILE WRITE-LINE ALLOCATE FREE RESIZE \
START SUSPEND RESUME STOP PAUSE MIN MAX TRUE FALSE ASCIIZ> \
R/O W/O ;CLASS ENDWITH OR AND /STRING SEARCH COMPARE EXPORT ;MODULE SPACE

keywords3.$(file.patterns.forth)=\
VARIABLE CREATE : VALUE CONSTANT VM: M: var dvar chars OBJ \
CONSTR: DESTR: CLASS: OBJECT: POINTER \
USER USER-CREATE USER-VALUE VECT \
WNDPROC: VOCABULARY -- TASK: CEZ: MODULE:

keywords4.$(file.patterns.forth)=\
CHAR [CHAR] POSTPONE WITH ['] TO [COMPILE] CHAR ASCII \'

keywords5.$(file.patterns.forth)=\
REQUIRE WINAPI:

keywords6.$(file.patterns.forth)=\
S" ABORT" Z" " ." C"

style.forth.0=$(font.monospace)
style.forth.1=fore:#009933,$(font.comment),$(font.monospace)
style.forth.2=fore:#007F00,$(font.comment)
style.forth.3=fore:#000000,bold
style.forth.4=fore:#00007F,bold
style.forth.5=fore:#000000,$(font.monospace),bold
style.forth.6=fore:#FF0000,bold,$(font.monospace)
style.forth.7=fore:#CC3300,bold,$(font.monospace)
style.forth.8=fore:#996633,bold,$(font.monospace)
style.forth.9=fore:#007F7F,$(font.monospace)
style.forth.10=fore:#CC3300,$(font.monospace)
style.forth.11=fore:#0000CC,$(font.monospace)


filter.fortran=Fortran (f for f90 f95 f2k)|*.f;*.for;*.f90;*.f95;*.f2k|

file.patterns.f95=*.f90;*.f95;*.f2k
file.patterns.f77=*.f;*.for
file.patterns.fortran=$(file.patterns.f95);$(file.patterns.f77)

lexer.$(file.patterns.f95)=fortran
lexer.$(file.patterns.f77)=f77

keywordclass.fortran=access action advance allocatable allocate \
apostrophe assign assignment associate asynchronous backspace \
bind blank blockdata call case character class close common \
complex contains continue cycle data deallocate decimal delim \
default dimension direct do dowhile double doubleprecision else \
elseif elsewhere encoding end endassociate endblockdata enddo \
endfile endforall endfunction endif endinterface endmodule endprogram \
endselect endsubroutine endtype endwhere entry eor equivalence \
err errmsg exist exit external file flush fmt forall form format \
formatted function go goto id if implicit in include inout \
integer inquire intent interface intrinsic iomsg iolength \
iostat kind len logical module name named namelist nextrec nml \
none nullify number only open opened operator optional out pad \
parameter pass pause pending pointer pos position precision \
print private program protected public quote read readwrite \
real rec recl recursive result return rewind save select \
selectcase selecttype sequential sign size stat status stop stream \
subroutine target then to type unformatted unit use value \
volatile wait where while write 

keywords.$(file.patterns.f95)=$(keywordclass.fortran)
keywords.$(file.patterns.f77)=$(keywordclass.fortran)

keywords2.$(file.patterns.fortran)=abs achar acos acosd adjustl adjustr \
aimag aimax0 aimin0 aint ajmax0 ajmin0 akmax0 akmin0 all allocated alog \
alog10 amax0 amax1 amin0 amin1 amod anint any asin asind associated \
atan atan2 atan2d atand bitest bitl bitlr bitrl bjtest bit_size bktest break \
btest cabs ccos cdabs cdcos cdexp cdlog cdsin cdsqrt ceiling cexp char \
clog cmplx conjg cos cosd cosh count cpu_time cshift csin csqrt dabs \
dacos dacosd dasin dasind datan datan2 datan2d datand date \
date_and_time dble dcmplx dconjg dcos dcosd dcosh dcotan ddim dexp \
dfloat dflotk dfloti dflotj digits dim dimag dint dlog dlog10 dmax1 dmin1 \
dmod dnint dot_product dprod dreal dsign dsin dsind dsinh dsqrt dtan dtand \
dtanh eoshift epsilon errsns exp exponent float floati floatj floatk floor fraction \
free huge iabs iachar iand ibclr ibits ibset ichar idate idim idint idnint ieor ifix \
iiabs iiand iibclr iibits iibset iidim iidint iidnnt iieor iifix iint iior iiqint iiqnnt iishft \
iishftc iisign ilen imax0 imax1 imin0 imin1 imod index inint inot int int1 int2 int4 \
int8 iqint iqnint ior ishft ishftc isign isnan izext jiand jibclr jibits jibset jidim jidint \
jidnnt jieor jifix jint jior jiqint jiqnnt jishft jishftc jisign jmax0 jmax1 jmin0 jmin1 \
jmod jnint jnot jzext kiabs kiand kibclr kibits kibset kidim kidint kidnnt kieor kifix \
kind kint kior kishft kishftc kisign kmax0 kmax1 kmin0 kmin1 kmod knint knot kzext \
lbound leadz len len_trim lenlge lge lgt lle llt log log10 logical lshift malloc matmul \
max max0 max1 maxexponent maxloc maxval merge min min0 min1 minexponent minloc \
minval mod modulo mvbits nearest nint not nworkers number_of_processors pack popcnt \
poppar precision present product radix random random_number random_seed range real \
repeat reshape rrspacing rshift scale scan secnds selected_int_kind \
selected_real_kind set_exponent shape sign sin sind sinh size sizeof sngl snglq spacing \
spread sqrt sum system_clock tan tand tanh tiny transfer transpose trim ubound unpack verify

keywords3.$(file.patterns.fortran)=cdabs cdcos cdexp cdlog cdsin cdsqrt cotan cotand \
dcmplx dconjg dcotan dcotand decode dimag dll_export dll_import doublecomplex dreal \
dvchk encode find flen flush getarg getcharqq getcl getdat getenv gettim hfix ibchng \
identifier imag int1 int2 int4 intc intrup invalop iostat_msg isha ishc ishl jfix \
lacfar locking locnear map nargs nbreak ndperr ndpexc offset ovefl peekcharqq precfill \
prompt qabs qacos qacosd qasin qasind qatan qatand qatan2 qcmplx qconjg qcos qcosd \
qcosh qdim qexp qext qextd qfloat qimag qlog qlog10 qmax1 qmin1 qmod qreal qsign qsin \
qsind qsinh qsqrt qtan qtand qtanh ran rand randu rewrite segment setdat settim system \
timer undfl unlock union val virtual volatile zabs zcos zexp zlog zsin zsqrt


comment.block.fortran=!~


style.fortran.0=fore:#808080
style.f77.0=fore:#808080
style.fortran.32=
style.f77.32=
style.fortran.1=$(colour.code.comment.line),$(font.code.comment.line)
style.f77.1=$(colour.code.comment.line),$(font.code.comment.line)
style.fortran.2=$(colour.number)
style.f77.2=$(colour.number)
style.fortran.3=$(colour.string)
style.f77.3=$(colour.string)
style.fortran.4=$(colour.string)
style.f77.4=$(colour.string)
style.fortran.5=fore:#000000,back:#E0C0E0,eolfilled
style.f77.5=fore:#000000,back:#E0C0E0,eolfilled
style.fortran.6=$(colour.operator),bold
style.f77.6=$(colour.operator),bold
style.fortran.7=
style.f77.7=
style.fortran.8=$(colour.keyword),case:u
style.f77.8=$(colour.keyword),case:u
style.fortran.9=fore:#B00040
style.f77.9=fore:#B00040
style.fortran.10=fore:#B04080
style.f77.10=fore:#B04080
style.fortran.11=$(colour.preproc)
style.f77.11=$(colour.preproc)
style.fortran.12=$(colour.operator),bold
style.f77.12=$(colour.operator),bold
style.fortran.13=fore:#E0C0E0
style.f77.13=fore:#E0C0E0
style.fortran.14=fore:#000000,back:#F0E080
style.f77.14=fore:#000000,back:#F0E080
braces.fortran.style=0

if PLAT_WIN
	fc77=lf95 $(FileNameExt) -c -fix
	fc90=lf95 $(FileNameExt) -c
if PLAT_GTK
	fc77=f77 -c -o $(FileName).o $(FileNameExt)
	fc90=f90 -c -o $(FileName).o $(FileNameExt)

command.compile.*.f=$(fc77)
command.build.*.f=make
command.go.*.f=$(FileName)

command.compile.*.for=$(fc77)
command.build.*.for=make
command.go.*.for=$(FileName)

command.compile.*.f90=$(fc90)
command.build.*.f90=make
command.go.*.f90=$(FileName)

command.compile.*.f95=$(fc90)
command.build.*.f95=make
command.go.*.f95=$(FileName)

if PLAT_WIN
    api.$(file.patterns.fortran)=$(SciteDefaultHome)\fortran.api

autocomplete.fortran.ignorecase=1
autocomplete.f77.ignorecase=1
calltip.fortran.ignorecase=1
calltip.f77.ignorecase=1


file.patterns.web=*.html;*.htm;*.asp;*.shtml;*.htd
file.patterns.php=*.php3;*.phtml;*.php
file.patterns.html=$(file.patterns.web);$(file.patterns.php);*.htt;*.cfm;*.tpl;*.dtd;*.hta
file.patterns.vxml=*.vxml
file.patterns.xml=*.xml;*.xsl;*.svg;*.xul;*.xsd;*.dtd;*.xslt;*.axl;*.xrc;*.rdf
file.patterns.docbook=*.docbook

lexer.$(file.patterns.html)=hypertext
lexer.$(file.patterns.vxml)=hypertext
lexer.$(file.patterns.xml)=xml
lexer.$(file.patterns.docbook)=hypertext

filter.web=Web (html htm asp shtml css xml docbook)|$(file.patterns.web);*.css;*.xml;*.docbook|
filter.php=PHP (php php3 phtml)|$(file.patterns.php)|

fold.html=1



hypertext.elements=\
a abbr acronym address applet area b base basefont \
bdo big blockquote body br button caption center \
cite code col colgroup dd del dfn dir div dl dt em \
fieldset font form frame frameset h1 h2 h3 h4 h5 h6 \
head hr html i iframe img input ins isindex kbd label \
legend li link map menu meta noframes noscript \
object ol optgroup option p param pre q s samp \
script select small span strike strong style sub sup \
table tbody td textarea tfoot th thead title tr tt u ul \
var xml xmlns

hypertext.attributes=\
abbr accept-charset accept accesskey action align alink \
alt archive axis background bgcolor border \
cellpadding cellspacing char charoff charset checked cite \
class classid clear codebase codetype color cols colspan \
compact content coords \
data datafld dataformatas datapagesize datasrc datetime \
declare defer dir disabled enctype event \
face for frame frameborder \
headers height href hreflang hspace http-equiv \
id ismap label lang language leftmargin link longdesc \
marginwidth marginheight maxlength media method multiple \
name nohref noresize noshade nowrap \
object onblur onchange onclick ondblclick onfocus \
onkeydown onkeypress onkeyup onload onmousedown \
onmousemove onmouseover onmouseout onmouseup \
onreset onselect onsubmit onunload \
profile prompt readonly rel rev rows rowspan rules \
scheme scope selected shape size span src standby start style \
summary tabindex target text title topmargin type usemap \
valign value valuetype version vlink vspace width \
text password checkbox radio submit reset \
file hidden image

keywordclass.hypertext=\
$(hypertext.elements) $(hypertext.attributes) public !doctype

vxml.elements=\
assign audio block break catch choice clear disconnect else elseif \
emphasis enumerate error exit field filled form goto grammar help \
if initial link log menu meta noinput nomatch object option p paragraph \
param phoneme prompt property prosody record reprompt return s say-as \
script sentence subdialog submit throw transfer value var voice vxml

vxml.attributes=\
accept age alphabet anchor application base beep bridge category charset \
classid cond connecttimeout content contour count dest destexpr dtmf dtmfterm \
duration enctype event eventexpr expr expritem fetchtimeout finalsilence \
gender http-equiv id level maxage maxstale maxtime message messageexpr \
method mime modal mode name namelist next nextitem ph pitch range rate \
scope size sizeexpr skiplist slot src srcexpr sub time timeexpr timeout \
transferaudio type value variant version volume xml:lang

keywordclass.vxml=\
$(vxml.elements) $(vxml.attributes) public !doctype

keywordclass.php=\
and argv as argc break case cfunction class continue declare default do \
die echo else elseif empty enddeclare endfor endforeach endif endswitch \
endwhile e_all e_parse e_error e_warning eval exit extends false for \
foreach function global http_cookie_vars http_get_vars http_post_vars \
http_post_files http_env_vars http_server_vars if include include_once \
list new not null old_function or parent php_os php_self php_version \
print require require_once return static switch stdclass this true var \
xor virtual while __file__ __line__ __sleep __wakeup

import phpfunctions

keywords.$(file.patterns.html)=$(keywordclass.hypertext)
keywords2.$(file.patterns.html)=$(keywordclass.javascript)
keywords3.$(file.patterns.html)=$(keywordclass.vb)
keywords4.$(file.patterns.html)=$(keywordclass.python)
keywords5.$(file.patterns.html)=$(keywordclass.php)
keywords6.$(file.patterns.html)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

docbook.elements42=\
abbrev abstract accel ackno acronym action address affiliation alt anchor \
answer appendix appendixinfo application area areaset areaspec arg article \
articleinfo artpagenums attribution audiodata audioobject author authorblurb \
authorgroup authorinitials beginpage bibliocoverage bibliodiv biblioentry \
bibliography bibliographyinfo biblioid bibliomisc bibliomixed bibliomset \
bibliorelation biblioset bibliosource blockinfo blockquote book bookinfo \
bridgehead callout calloutlist caption caution chapter chapterinfo citation \
citebiblioid citerefentry citetitle city classname classsynopsis classsynopsisinfo \
cmdsynopsis co collab collabname colophon colspec command computeroutput \
confdates confgroup confnum confsponsor conftitle constant constraint \
constraintdef constructorsynopsis contractnum contractsponsor contrib \
copyright coref corpauthor corpname country database date dedication \
destructorsynopsis edition editor email emphasis entry entrytbl envar \
epigraph equation errorcode errorname errortext errortype example \
exceptionname fax fieldsynopsis figure filename firstname firstterm \
footnote footnoteref foreignphrase formalpara funcdef funcparams \
funcprototype funcsynopsis funcsynopsisinfo function glossary glossaryinfo \
glossdef glossdiv glossentry glosslist glosssee glossseealso glossterm \
graphic graphicco group guibutton guiicon guilabel guimenu guimenuitem \
guisubmenu hardware highlights holder honorific htm imagedata imageobject \
imageobjectco important index indexdiv indexentry indexinfo indexterm \
informalequation informalexample informalfigure informaltable initializer \
inlineequation inlinegraphic inlinemediaobject interface interfacename \
invpartnumber isbn issn issuenum itemizedlist itermset jobtitle keycap \
keycode keycombo keysym keyword keywordset label legalnotice lhs lineage \
lineannotation link listitem iteral literallayout lot lotentry manvolnum \
markup medialabel mediaobject mediaobjectco member menuchoice methodname \
methodparam methodsynopsis mm modespec modifier ousebutton msg msgaud \
msgentry msgexplan msginfo msglevel msgmain msgorig msgrel msgset msgsub \
msgtext nonterminal note objectinfo olink ooclass ooexception oointerface \
option optional orderedlist orgdiv orgname otheraddr othercredit othername \
pagenums para paramdef parameter part partinfo partintro personblurb \
personname phone phrase pob postcode preface prefaceinfo primary primaryie \
printhistory procedure production productionrecap productionset productname \
productnumber programlisting programlistingco prompt property pubdate publisher \
publishername pubsnumber qandadiv qandaentry qandaset question quote refclass \
refdescriptor refentry refentryinfo refentrytitle reference referenceinfo \
refmeta refmiscinfo refname refnamediv refpurpose refsect1 refsect1info refsect2 \
refsect2info refsect3 refsect3info refsection refsectioninfo refsynopsisdiv \
refsynopsisdivinfo releaseinfo remark replaceable returnvalue revdescription \
revhistory revision revnumber revremark rhs row sbr screen screenco screeninfo \
screenshot secondary secondaryie sect1 sect1info sect2 sect2info sect3 sect3info \
sect4 sect4info sect5 sect5info section sectioninfo see seealso seealsoie \
seeie seg seglistitem segmentedlist segtitle seriesvolnums set setindex \
setindexinfo setinfo sgmltag shortaffil shortcut sidebar sidebarinfo simpara \
simplelist simplemsgentry simplesect spanspec state step street structfield \
structname subject subjectset subjectterm subscript substeps subtitle \
superscript surname sv symbol synopfragment synopfragmentref synopsis \
systemitem table tbody term tertiary tertiaryie textdata textobject tfoot \
tgroup thead tip title titleabbrev toc tocback tocchap tocentry tocfront \
toclevel1 toclevel2 toclevel3 toclevel4 toclevel5 tocpart token trademark \
type ulink userinput varargs variablelist varlistentry varname videodata \
videoobject void volumenum warning wordasword xref year

docbook.attributes=\
arch condition conformance id lang os remap role revision revisionflag security \
userlevel vendor xreflabel \
status label endterm linkend space width

keywordclass.docbook=\
$(docbook.elements42) $(docbook.attributes)

keywords.$(file.patterns.docbook)=$(keywordclass.docbook)
keywords6.$(file.patterns.docbook)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

word.characters.$(file.patterns.html)=$(chars.alpha)$(chars.numeric)_-
comment.stream.start.hypertext=<!--
comment.stream.end.hypertext=-->

keywords.$(file.patterns.xml)=
keywords6.$(file.patterns.xml)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

word.characters.$(file.patterns.xml)=$(chars.alpha)$(chars.numeric)_-

keywords.$(file.patterns.vxml)=$(keywordclass.vxml)
keywords2.$(file.patterns.vxml)=$(keywordclass.javascript)



word.characters.$(file.patterns.vxml)=$(chars.alpha)$(chars.numeric)_-

keywords.*.css=\
background background-attachment background-color background-image background-position background-repeat \
border-color border-bottom border-bottom-width border-left border-left-width \
border border-right-width border-right border-style border-top border-top-width border-width \
clear clip color cursor display float \
font font-family font-size font-style font-variant font-weight \
height left letter-spacing line-height \
list-style list-style-image list-style-position list-style-type \
margin margin-bottom margin-left margin-right margin-top overflow \
padding padding-bottom padding-left padding-right padding-top position \
text-align text-decoration text-indent text-transform top \
vertical-align visibility width white-space word-spacing z-index

word.characters.*.css=$(chars.alpha)$(chars.numeric)_-


style.hypertext.0=fore:#000000,$(font.text)
style.hypertext.1=fore:#000080
style.hypertext.2=fore:#FF0000
style.hypertext.3=fore:#008080
style.hypertext.4=fore:#FF0000
style.hypertext.5=$(colour.number)
style.hypertext.6=$(colour.string)
style.hypertext.7=$(colour.string)
style.hypertext.8=fore:#800080
style.hypertext.9=fore:#808000,$(font.text.comment)
style.hypertext.10=fore:#800080,$(font.text)
style.hypertext.11=fore:#000080
style.hypertext.12=fore:#0000FF
style.hypertext.13=fore:#0000FF
style.hypertext.14=fore:#000080
style.hypertext.15=back:#FFFF00
style.hypertext.16=back:#FFDF00
style.hypertext.17=back:#FFDF00
style.hypertext.18=fore:#0000FF,back:#FFEFBF
style.hypertext.19=fore:#FF00FF,back:#FFEFFF
style.hypertext.21=fore:#000080,back:#EFEFFF
style.hypertext.22=fore:#000080,back:#EFEFFF,bold
style.hypertext.23=fore:#006600,back:#EFEFFF
style.hypertext.24=fore:#800000,back:#EFEFFF
style.hypertext.25=fore:#993300,back:#EFEFFF
style.hypertext.26=fore:#800000,back:#FF6666
style.hypertext.27=fore:#3366FF,back:#EFEFFF
style.hypertext.28=fore:#333333,back:#EFEFFF
style.hypertext.29=fore:#808000,back:#EFEFFF
style.hypertext.31=fore:#000066,back:#CCCCE0
style.hypertext.34=fore:#0000FF,notbold,$(font.text)
style.hypertext.35=fore:#FF0000,notbold,$(font.text)

fontcolour.js=$(colour.embedded.js),$(font.js)
style.hypertext.40=fore:#7F7F00
style.hypertext.41=fore:#000000,bold,$(fontcolour.js),eolfilled
style.hypertext.42=$(colour.code.comment.box),$(fontcolour.js),eolfilled
style.hypertext.43=$(colour.code.comment.line),$(fontcolour.js)
style.hypertext.44=$(colour.code.comment.doc),bold,$(fontcolour.js),eolfilled
style.hypertext.45=$(colour.number),$(fontcolour.js)
style.hypertext.46=fore:#000000,$(fontcolour.js)
style.hypertext.47=$(colour.keyword),bold,$(fontcolour.js)
style.hypertext.48=$(colour.string),$(fontcolour.js)
style.hypertext.49=$(colour.string),$(fontcolour.js)
style.hypertext.50=$(colour.operator),bold,$(fontcolour.js)
style.hypertext.51=back:#BFBBB0,eolfilled
style.hypertext.52=back:#FFBBB0

style.hypertext.55=fore:#7F7F00
style.hypertext.56=fore:#000000,bold,$(font.js),back:#DFDF7F,eolfilled
style.hypertext.57=fore:#007F00,$(font.js),back:#DFDF7F,eolfilled
style.hypertext.58=fore:#007F00,$(font.js),back:#DFDF7F
style.hypertext.59=fore:#7F7F7F,bold,$(font.js),back:#DFDF7F,eolfilled
style.hypertext.60=fore:#007F7F,$(font.js),back:#DFDF7F
style.hypertext.61=fore:#000000,$(font.js),back:#DFDF7F
style.hypertext.62=fore:#00007F,bold,$(font.js),back:#DFDF7F
style.hypertext.63=fore:#7F007F,$(font.js),back:#DFDF7F
style.hypertext.64=fore:#7F007F,$(font.js),back:#DFDF7F
style.hypertext.65=fore:#000000,bold,$(font.js),back:#DFDF7F
style.hypertext.66=back:#BFBBB0,eolfilled
style.hypertext.67=back:#FFBBB0

style.hypertext.70=
style.hypertext.71=$(font.vbs),back:#EFEFFF,fore:#000000,eolfilled
style.hypertext.72=$(font.comment),back:#EFEFFF,fore:#008000,eolfilled
style.hypertext.73=$(font.vbs),back:#EFEFFF,fore:#008080,eolfilled
style.hypertext.74=$(font.vbs),back:#EFEFFF,fore:#000080,bold,eolfilled
style.hypertext.75=$(font.vbs),back:#EFEFFF,fore:#800080,eolfilled
style.hypertext.76=$(font.vbs),back:#EFEFFF,fore:#000080,eolfilled
style.hypertext.77=$(font.vbs),back:#7F7FFF,fore:#000080,eolfilled

style.hypertext.80=
style.hypertext.81=$(font.vbs),back:#CFCFEF,fore:#000000,eolfilled
style.hypertext.82=$(font.comment),back:#CFCFEF,fore:#008000,eolfilled
style.hypertext.83=$(font.vbs),back:#CFCFEF,fore:#008080,eolfilled
style.hypertext.84=$(font.vbs),back:#CFCFEF,fore:#000080,bold,eolfilled
style.hypertext.85=$(font.vbs),back:#CFCFEF,fore:#800080,eolfilled
style.hypertext.86=$(font.vbs),back:#CFCFEF,fore:#000080,eolfilled
style.hypertext.87=$(font.vbs),back:#7F7FBF,fore:#000080,eolfilled

style.hypertext.90=fore:#808080
style.hypertext.91=fore:#808080,back:#EFFFEF,eolfilled
style.hypertext.92=fore:#007F00,$(font.comment),back:#EFFFEF,eolfilled
style.hypertext.93=fore:#007F7F,back:#EFFFEF,eolfilled
style.hypertext.94=fore:#7F007F,$(font.monospace),back:#EFFFEF,eolfilled
style.hypertext.95=fore:#7F007F,$(font.monospace),back:#EFFFEF,eolfilled
style.hypertext.96=fore:#00007F,bold,back:#EFFFEF,eolfilled
style.hypertext.97=fore:#7F0000,back:#EFFFEF,eolfilled
style.hypertext.98=fore:#7F0000,back:#EFFFEF,eolfilled
style.hypertext.99=fore:#0000FF,bold,back:#EFFFEF,eolfilled
style.hypertext.100=fore:#007F7F,bold,back:#EFFFEF,eolfilled
style.hypertext.101=bold,back:#EFFFEF,eolfilled
style.hypertext.102=back:#EFFFEF,eolfilled

style.hypertext.104=fore:#00007F,italics,back:#FFF8F8

style.hypertext.105=fore:#808080
style.hypertext.106=fore:#808080,back:#CFEFCF,eolfilled
style.hypertext.107=fore:#007F00,$(font.comment),back:#CFEFCF,eolfilled
style.hypertext.108=fore:#007F7F,back:#CFEFCF,eolfilled
style.hypertext.109=fore:#7F007F,$(font.monospace),back:#CFEFCF,eolfilled
style.hypertext.110=fore:#7F007F,$(font.monospace),back:#CFEFCF,eolfilled
style.hypertext.111=fore:#00007F,bold,back:#CFEFCF,eolfilled
style.hypertext.112=fore:#7F0000,back:#CFEFCF,eolfilled
style.hypertext.113=fore:#7F0000,back:#CFEFCF,eolfilled
style.hypertext.114=fore:#0000FF,bold,back:#CFEFCF,eolfilled
style.hypertext.115=fore:#007F7F,bold,back:#CFEFCF,eolfilled
style.hypertext.116=bold,back:#CFEFCF,eolfilled
style.hypertext.117=back:#CFEFCF,eolfilled

style.hypertext.118=fore:#000033,back:#FFF8F8,eolfilled
style.hypertext.119=fore:#007F00,back:#FFF8F8
style.hypertext.120=fore:#009F00,back:#FFF8F8
style.hypertext.121=fore:#7F007F,italics,back:#FFF8F8
style.hypertext.122=fore:#CC9900,back:#FFF8F8
style.hypertext.123=fore:#00007F,italics,back:#FFF8F8
style.hypertext.124=fore:#999999,$(font.comment),back:#FFF8F8
style.hypertext.125=fore:#666666,italics,$(font.comment),back:#FFF8F8
style.hypertext.126=fore:#00007F,italics,back:#FFF8F8
style.hypertext.127=fore:#000000,back:#FFF8F8


style.xml.0=fore:#000000,$(font.text)
style.xml.1=fore:#000080
style.xml.2=fore:#000080
style.xml.3=fore:#008080
style.xml.4=fore:#008080
style.xml.5=$(colour.number)
style.xml.6=$(colour.string)
style.xml.7=$(colour.string)
style.xml.8=fore:#800080
style.xml.9=fore:#808000
style.xml.10=fore:#800080,$(font.text)
style.xml.11=fore:#000080
style.xml.12=fore:#800080,bold
style.xml.13=fore:#800080,bold
style.xml.17=fore:#800000,back:#FFF0F0,$(font.text),eolfilled
style.xml.18=fore:#800000
style.xml.19=fore:#608060
style.xml.21=fore:#000080,back:#EFEFFF
style.xml.22=fore:#000080,back:#EFEFFF,bold
style.xml.23=fore:#006600,back:#EFEFFF
style.xml.24=fore:#800000,back:#EFEFFF
style.xml.25=fore:#993300,back:#EFEFFF
style.xml.26=fore:#800000,back:#FF6666
style.xml.27=fore:#3366FF,back:#EFEFFF
style.xml.28=fore:#333333,back:#EFEFFF
style.xml.29=fore:#808000,back:#EFEFFF
style.xml.31=fore:#000066,back:#CCCCE0
braces.xml.style=31

if PLAT_WIN
	command.go.$(file.patterns.web)="file://$(FilePath)"
	command.go.subsystem.$(file.patterns.web)=2
	command.go.$(file.patterns.php)=php -f $(FileNameExt)
if PLAT_GTK
	command.go.$(file.patterns.web)=netscape "file://$(FilePath)"

file.patterns.kix=*.kix
filter.kix=Kix-Script (kix)|$(file.patterns.kix)|

lexer.$(file.patterns.kix)=kix

keywords.$(file.patterns.kix)=? and beep big break call cd cls color cookie1 copy \
	debug del dim display do until exit flushkb for each next function endfunction \
	get gets global go gosub goto if else endif md or password play quit \
	rd redim return run select case endselect set setl setm settime \
	shell sleep small use while loop

keywords2.$(file.patterns.kix)=abs addkey addprinterconnection addprogramgroup \
	addprogramitem asc ascan at backupeventlog box cdbl chr cint cleareventlog \
	close comparefiletimes createobject cstr dectohex delkey delprinterconnection \
	delprogramgroup delprogramitem deltree delvalue dir enumgroup enumipinfo enumkey \
	enumlocalgroup enumvalue execute exist existkey expandenvironmentvars fix \
	formatnumber freefilehandle getdiskspace getfileattr getfilesize getfiletime \
	getfileversion getobject iif ingroup instr instrrev int isdeclared join \
	kbhit keyexist lcase left len loadhive loadkey logevent logoff ltrim \
	memorysize messagebox open readline readprofilestring readtype readvalue \
	redirectoutput right rnd round rtrim savekey sendkeys sendmessage setascii \
	setconsole setdefaultprinter setfileattr setfocus setoption setsystemstate \
	settitle setwallpaper showprogramgroup shutdown sidtoname split srnd substr \
	trim ubound ucase unloadhive val vartype vartypename writeline \
	writeprofilestring writevalue 

keywords3.$(file.patterns.kix)=address build color comment cpu crlf csd curdir \
	date day domain dos error fullname homedir homedrive homeshr hostname \
	inwin ipaddress0 ipaddress1 ipaddress2 ipaddress3 kix lanroot ldomain \
	ldrive lm logonmode longhomedir lserver maxpwage mdayno mhz monthno \
	month msecs pid primarygroup priv productsuite producttype pwage ras \
	result rserver scriptdir scriptexe scriptname serror sid site startdir \
	syslang ticks time userid userlang wdayno wksta wuserid ydayno year

comment.block.kix=;
comment.block.at.line.start.kix=1

style.kix.0=fore:#000000,$(font.vbs)
style.kix.1=$(colour.code.comment.line),$(font.code.comment.line)
style.kix.2=$(colour.string)
style.kix.3=$(colour.string)
style.kix.4=$(colour.number)
style.kix.5=fore:#B00040
style.kix.6=$(colour.preproc)
style.kix.7=$(colour.keyword),bold
style.kix.8=$(colour.keyword)
style.kix.9=$(colour.operator),bold

command.go.*.kix=kix32 $(FileName)

tab.size.$(file.patterns.kix)=6
indent.size.$(file.patterns.kix)=3
use.tabs.$(file.patterns.kix)=1

statement.indent.$(file.patterns.kix)=7 if else for do while function case
statement.end.$(file.patterns.kix)=7 endif next until loop endfunction endselect

file.patterns.latex=*.tex;*.sty

filter.latex=LaTeX (tex sty)|$(file.patterns.latex)|

lexer.$(file.patterns.latex)=latex

style.latex.0=fore:#000000
style.latex.1=fore:#AA0000,bold
style.latex.2=fore:#880088,bold
style.latex.3=fore:#0000FF
style.latex.4=fore:#00AA00

command.compile.*.tex=latex $(FileNameExt)
command.build.*.tex=dvips -f $(FileName).dvi > $(FileName).ps
command.go.*.tex=dvips $(FileName).dvi

command.name.0.*.tex=View
command.0.*.tex=xdvi $(FileName).dvi
command.name.1.*.tex=View PS
command.1.*.tex=gv $(FileName).ps

file.patterns.lisp=*.lsp;*.lisp

filter.lisp=LISP (lsp lisp)|$(file.patterns.lisp)|

file.patterns.scheme=*.scm;*.smd;*.ss
filter.scheme=Scheme (scm smd)|$(file.patterns.scheme)|

lexer.$(file.patterns.lisp)=lisp
lexer.$(file.patterns.scheme)=lisp

keywords.$(file.patterns.lisp)= not defun + - * / = < > <= >= princ \
eval apply funcall quote identity function complement backquote lambda set setq setf \
defun defmacro gensym make symbol intern symbol name symbol value symbol plist get \
getf putprop remprop hash make array aref car cdr caar cadr cdar cddr caaar caadr cadar \
caddr cdaar cdadr cddar cdddr caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr \
cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr cons list append reverse last nth \
nthcdr member assoc subst sublis nsubst  nsublis remove length list length \
mapc mapcar mapl maplist mapcan mapcon rplaca rplacd nconc delete atom symbolp numberp \
boundp null listp consp minusp zerop plusp evenp oddp eq eql equal cond case and or let l if prog \
prog1 prog2 progn go return do dolist dotimes catch throw error cerror break \
continue errset baktrace evalhook truncate float rem min max abs sin cos tan expt exp sqrt \
random logand logior logxor lognot bignums logeqv lognand lognor \
logorc2 logtest logbitp logcount integer length nil

word.chars.lisp=$(chars.alpha)$(chars.numeric)_-<>.#+@$%^&=*!?
word.characters.$(file.patterns.lisp)=$(word.chars.lisp)

keywords.$(file.patterns.scheme)= + - * / = < > <= >= => \
abs acos and angle append apply asin assoc assoc assq assv atan \
begin boolean? \
caar cadr call-with-current-continuation call/cc \
call-with-input-file call-with-output-file call-with-values \
car cdr \
caar cadr cdar cddr \
caaar caadr cadar caddr cdaar cdadr cddar cdddr \
caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr \
cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr \
case ceiling char->integer \
char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? \
char-downcase char-lower-case? char-numeric? char-ready? \
char-upcase char-upper-case? char-whitespace? \
char<=? char<? char=? char>=? char>? char? \
close-input-port close-output-port complex? cond cons cos \
current-input-port current-output-port \
define define-syntax delay denominator display do dynamic-wind \
else eof-object? eq? equal? eqv? eval even? exact->inexact exact? \
exp expt \
floor for-each force \
gcd \
if imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment \
lambda lcm length let let* let-syntax letrec letrec-syntax \
list list->string list->vector list-ref list-tail list? load log \
magnitude make-polar make-rectangular make-string make-vector \
map max member memq memv min modulo \
negative? newline not null-environment null? number->string number? numerator \
odd? open-input-file open-output-file or output-port? \
pair? peek-char input-port? output-port? positive? procedure? \
quasiquote quote quotient \
rational? rationalize read read-char real-part real? remainder reverse round \
scheme-report-environment set! set-car! set-cdr! sin sqrt string \
string->list string->number string->symbol string-append \
string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? \
string-copy string-fill! string-length string-ref string-set! \
string<=? string<? string=? string>=? string>? string? \
substring symbol->string symbol? syntax-rules \
transcript-off transcript-on truncate \
unquote unquote-splicing \
values vector vector->list vector-fill! vector-length vector-ref vector-set! vector? \
with-input-from-file with-output-to-file write write-char \
zero?

word.chars.scheme=$(chars.alpha)$(chars.numeric)!$%&*/:<=>?^_~+-.@
word.characters.$(file.patterns.scheme)=$(word.chars.scheme)


comment.block.lisp=;
comment.box.start.lisp=;;
comment.box.middle.lisp=;;
comment.box.end.lisp=;;



style.lisp.32=$(font.base)
style.lisp.0=fore:#808080
style.lisp.1=$(colour.code.comment.box),$(font.code.comment.box)
style.lisp.2=$(colour.number)
style.lisp.3=$(colour.keyword),bold
style.lisp.6=$(colour.string)
style.lisp.10=$(colour.operator),bold
style.lisp.9=
style.lisp.8=fore:#000000,font:Verdana,size:9,back:#fefecc,eolfilled
style.lisp.34=fore:#0000FF,bold
style.lisp.35=fore:#FF0000,bold
braces.lisp.style=10

command.go.$(file.patterns.scheme)=c:\tools\gambit\gsi.exe -f $(FilePath)
command.go.subsystem.$(file.patterns.scheme)=0
file.patterns.lot=*.lot

filter.lot=Lot (lot)|$(file.patterns.lot)|

lexer.$(file.patterns.lot)=lot

word.characters.$(file.patterns.lot)=$(chars.alpha)$(chars.numeric)

style.lot.0=fore:#000000
style.lot.1=back:#00F0FF,eolfilled
style.lot.2=back:#FFFF00,eolfilled
 style.lot.3=fore:#FFFFFF,back:#0000FF,bold,eolfilled
 style.lot.4=back:#00FF00,eolfilled
style.lot.5=back:#FF0000,eolfilled,bold
style.lot.6=back:#0000FF,bold,eolfilled

file.patterns.lout=*.lt

filter.lout=Lout (lt)|*.lt|

lexer.$(file.patterns.lout)=lout

keywords.$(file.patterns.lout)= @OptGall @Filter @FilterIn @FilterOut \
@FilterErr @FontDef @Family @Face @Name @Metrics @ExtraMetrics \
@Mapping @Recode @Common @Rump @Meld @Insert @OneOf @Next @Plus \
@Minus @Wide @High @HShift @VShift @BeginHeaderComponent \
@EndHeaderComponent @SetHeaderComponent @ClearHeaderComponent @OneCol \
@OneRow @HScale @VScale @HCover @VCover @Scale @KernShrink @HContract \
@VContract @HLimited @VLimited @HExpand @VExpand @StartHVSpan \
@StartHSpan @StartVSpan @HSpan @VSpan @PAdjust @HAdjust @VAdjust \
@Rotate @Background @IncludeGraphic @SysIncludeGraphic @Graphic \
@LinkSource @LinkDest @URLLink @PlainGraphic @Verbatim @RawVerbatim \
@Case @Yield @BackEnd @Char @Font @Space @YUnit @ZUnit @Break \
@Underline @SetColour @SetColor @SetTexture @Outline @Language \
@CurrLang @CurrFamily @CurrFace @CurrYUnit @CurrZUnit @LEnv @LClos \
@LUse @LEO @Open @Use @NotRevealed @Tagged @Database @SysDatabase \
@Include @SysInclude @IncludeGraphicRepeated @PrependGraphic \
@SysIncludeGraphicRepeated @SysPrependGraphic @Target @Null \
@PageLabel @Galley @ForceGalley @LInput @Split @Tag @Key @Optimize \
@Merge @Enclose @Begin @End @Moment @Second @Minute @Hour @Day @Month \
@Year @Century @WeekDay @YearDay @DaylightSaving @@A @@B @@C @@D @@E @@V

keywords2.$(file.patterns.lout)= &&& && & ^// ^/ ^|| ^| ^& // / || |

keywords3.$(file.patterns.lout)= def langdef force horizontally into \
extend import export precedence associativity left right body macro \
named compulsory following preceding foll_or_prec now

comment.block.lout=#~

indent.maintain.$(file.patterns.lout)=1


style.lout.32=$(font.base)
style.lout.0=fore:#808080
style.lout.1=$(colour.code.comment.line),$(font.code.comment.line)
style.lout.2=$(colour.number)
style.lout.3=$(colour.keyword),bold
style.lout.4=$(colour.keyword),bold
style.lout.5=$(colour.keyword),bold
style.lout.6=$(colour.keyword)
style.lout.7=$(colour.string)
style.lout.8=$(colour.operator),bold
style.lout.9=
style.lout.10=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
braces.lout.style=8

command.compile.$(file.patterns.lout)=lout "$(FileNameExt)" > "$(FileName).ps" 
command.build.$(file.patterns.lout)=make

if PLAT_WIN
	command.go.$(file.patterns.lout)=gview "$(FileName).ps"

if PLAT_GTK
	command.go.$(file.patterns.lout)=gview32 "$(FileName).ps"


file.patterns.lua=*.lua

filter.lua=Lua (lua)|$(file.patterns.lua)|

lexer.$(file.patterns.lua)=lua

word.chars.lua=$(chars.alpha)$(chars.numeric)_%
word.characters.$(file.patterns.lua)=$(chars.alpha)$(chars.numeric)_%

keywordclass.lua=and break do else elseif end false for function if \
in local nil not or repeat return then true until while
keywords.$(file.patterns.lua)=$(keywordclass.lua)

keywordclass2.lua=_VERSION assert collectgarbage dofile error gcinfo loadfile loadstring \
print tonumber tostring type unpack

keywordclass2.lua4=_ALERT _ERRORMESSAGE _INPUT _PROMPT _OUTPUT \
_STDERR _STDIN _STDOUT call dostring foreach foreachi getn globals newtype \
rawget rawset require sort tinsert tremove

keywordclass3.lua4=abs acos asin atan atan2 ceil cos deg exp \
floor format frexp gsub ldexp log log10 max min mod rad random randomseed \
sin sqrt strbyte strchar strfind strlen strlower strrep strsub strupper tan

keywordclass4.lua4=openfile closefile readfrom writeto appendto \
remove rename flush seek tmpfile tmpname read write \
clock date difftime execute exit getenv setlocale time

keywordclass2.lua5=_G getfenv getmetatable ipairs loadlib next pairs pcall \
rawegal rawget rawset require setfenv setmetatable xpcall \
string table math coroutine io os debug

keywordclass3.lua5=string.byte string.char string.dump string.find string.len \
string.lower string.rep string.sub string.upper string.format string.gfind string.gsub \
table.concat table.foreach table.foreachi table.getn table.sort table.insert table.remove table.setn \
math.abs math.acos math.asin math.atan math.atan2 math.ceil math.cos math.deg math.exp \
math.floor math.frexp math.ldexp math.log math.log10 math.max math.min math.mod \
math.pi math.rad math.random math.randomseed math.sin math.sqrt math.tan

keywordclass4.lua5=coroutine.create coroutine.resume coroutine.status \
coroutine.wrap coroutine.yield \
io.close io.flush io.input io.lines io.open io.output io.read io.tmpfile io.type io.write \
io.stdin io.stdout io.stderr \
os.clock os.date os.difftime os.execute os.exit os.getenv os.remove os.rename \
os.setlocale os.time os.tmpname


keywords2.$(file.patterns.lua)=$(keywordclass2.lua) $(keywordclass2.lua4) $(keywordclass2.lua5)
keywords3.$(file.patterns.lua)=$(keywordclass3.lua4) $(keywordclass3.lua5)
keywords4.$(file.patterns.lua)=$(keywordclass4.lua4) $(keywordclass4.lua5)

indent.maintain.$(file.patterns.lua)=1

comment.block.lua=--~
comment.block.at.line.start.lua=1


style.lua.32=$(font.code.base),fore:#000000
style.lua.0=fore:#FF0000
style.lua.1=$(colour.code.comment.box),$(font.code.comment.box),back:#D0F0F0,eolfilled
style.lua.2=$(colour.code.comment.line),$(font.code.comment.line)
style.lua.3=$(colour.notused),$(font.notused)
style.lua.4=$(colour.number)
style.lua.5=$(colour.keyword)
style.lua.6=$(colour.string)
style.lua.7=$(colour.char)
style.lua.8=$(colour.string),$(font.code.comment.box),back:#E0FFFF
style.lua.9=$(colour.preproc)
style.lua.10=$(colour.operator)
style.lua.11=
style.lua.12=back:#E0C0E0,eolfilled
style.lua.13=$(style.lua.5),back:#D0FFD0
style.lua.14=$(style.lua.5),back:#D0D0FF
style.lua.15=$(style.lua.5),back:#FFD0D0
style.lua.16=$(style.lua.5),back:#FFD0FF
style.lua.17=$(style.lua.5),back:#FFFFD0
style.lua.18=$(style.lua.5),back:#FFA0A0
style.lua.19=$(style.lua.5),back:#FFD0D0
braces.lua.style=10

command.compile.*.lua=LuaC-5.0.exe -o "$(FileName).luc" "$(FileNameExt)"
command.go.*.lua=Lua-5.0.exe "$(FileNameExt)"

DEFAULT_M_LEXER_OCTAVE=1
DEFAULT_M_LEXER_MATLAB=0


file.patterns.octave=*.m.octave
	#~ file.patterns.octave=*.m;$(file.patterns.octave)
file.patterns.matlab=*.m;*.m.octave

filter.octave=Octave (m)|$(file.patterns.octave)|

lexer.$(file.patterns.octave)=octave

keywordclass.octave=\
break \
case \
catch \
continue \
do \
else \
elseif \
end \
end_unwind_protect \
endfor \
endif \
endswitch \
endwhile \
for \
function endfunction \
global \
if \
otherwise \
persistent \
return \
switch \
try \
until \
unwind_protect \
unwind_protect_cleanup \
while

keywords.$(file.patterns.octave)=$(keywordclass.octave)

comment.block.octave=#

style.octave.0=fore:#000000
style.octave.1=$(colour.code.comment.line),$(font.code.comment.line)
style.octave.2=$(colour.preproc)
style.octave.3=$(colour.number)
style.octave.4=$(colour.keyword),bold
style.octave.5=$(colour.string)
style.octave.8=$(colour.string)
style.octave.6=$(colour.operator),bold
style.octave.7=


file.patterns.matlab=*.m.matlab
	#~ file.patterns.matlab=*.m;$(file.patterns.matlab)
filter.matlab=Matlab (m)|$(file.patterns.matlab)|

lexer.$(file.patterns.matlab)=matlab

keywordclass.matlab=break case catch continue else elseif end for function \
global if otherwise persistent return switch try while

keywords.$(file.patterns.matlab)=$(keywordclass.matlab)

comment.block.matlab=%~

style.matlab.0=fore:#000000
style.matlab.1=$(colour.code.comment.line),$(font.code.comment.line)
style.matlab.2=$(colour.preproc)
style.matlab.3=$(colour.number)
style.matlab.4=$(colour.keyword),bold
style.matlab.5=$(colour.string)
style.matlab.8=$(colour.string)
style.matlab.6=$(colour.operator),bold
style.matlab.7=



file.patterns.metapost=
file.patterns.metafun=

file.patterns.metapost=*.mp;*.mpx;
file.patterns.metafun=*.mp;*.mpx;*.mpy;

filter.metapost=MetaPost|$(file.patterns.metapost)|
filter.metafun=MetaFun|$(file.patterns.metafun)|

lexer.$(file.patterns.metapost)=metapost
lexer.$(file.patterns.metafun)=metapost


command.compile.$(file.patterns.metapost)=
command.build.$(file.patterns.metapost)=mpost $(FileNameExt)
command.go.$(file.patterns.metapost)=gv $(FileName).1

command.compile.$(file.patterns.metafun)=
command.build.$(file.patterns.metafun)=texexec --mptex $(FileNameExt)
command.go.$(file.patterns.metafun)=gv $(FileName).1

command.0.$(file.patterns.metapost)=
command.1.$(file.patterns.metapost)=
command.2.$(file.patterns.metapost)=
command.3.$(file.patterns.metapost)=
command.4.$(file.patterns.metapost)=
command.5.$(file.patterns.metapost)=
command.6.$(file.patterns.metapost)=
command.7.$(file.patterns.metapost)=
command.8.$(file.patterns.metapost)=
command.9.$(file.patterns.metapost)=

command.0.$(file.patterns.metafun)=
command.1.$(file.patterns.metafun)=
command.2.$(file.patterns.metafun)=
command.3.$(file.patterns.metafun)=
command.4.$(file.patterns.metafun)=
command.5.$(file.patterns.metafun)=
command.6.$(file.patterns.metafun)=
command.7.$(file.patterns.metafun)=
command.8.$(file.patterns.metafun)=
command.9.$(file.patterns.metafun)=


style.metapost.0=fore:#7F7F00
style.metapost.0=fore:#3F3F3F
style.metapost.1=fore:#007F7F
style.metapost.2=fore:#7F0000
style.metapost.3=fore:#7F7F00
style.metapost.4=fore:#007F00
style.metapost.5=fore:#000000
style.metapost.6=fore:#007F00,italics

style.metapost.34=fore:#00007F
style.metapost.35=fore:#7F007F


comment.block.metapost=%
comment.block.at.line.start.metapost=1


lexer.metapost.interface.default=1


lexer.metapost.comment.process=0


keywordclass.metapost.tex=\
    btex verbatimtex etex

keywordclass.metapost.primitives=\
    charcode day linecap linejoin miterlimit month pausing \
    prologues showstopping time tracingcapsules tracingchoices \
    tracingcommands tracingequations tracinglostchars \
    tracingmacros tracingonline tracingoutput tracingrestores \
    tracingspecs tracingstats tracingtitles truecorners \
    warningcheck year \
    false nullpicture pencircle true \
    and angle arclength arctime ASCII bluepart boolean bot \
    char color cosd cycle decimal directiontime floor fontsize \
    greenpart hex infont intersectiontimes known length llcorner \
    lrcorner makepath makepen mexp mlog normaldeviate not \
    numeric oct odd or path pair pen penoffset picture point \
    postcontrol precontrol redpart reverse rotated scaled \
    shifted sind slanted sqrt str string subpath substring \
    transform transformed ulcorner uniformdeviate unknown \
    urcorner xpart xscaled xxpart xypart ypart yscaled yxpart \
    yypart zscaled \
    addto clip input interim let newinternal save setbounds \
    shipout show showdependencies showtoken showvariable \
    special \
    begingroup endgroup of curl tension and controls \
    reflectedabout rotatedaround interpath on off beginfig \
    endfig def vardef enddef epxr suffix text primary secondary \
    tertiary primarydef secondarydef tertiarydef top bottom \
    ulft urt llft lrt randomseed also contour doublepath \
    withcolor withpen dashed if else elseif fi for endfor forever exitif \
    forsuffixes downto upto step until \
    charlist extensible fontdimen headerbyte kern ligtable \
    boundarychar chardp charext charht charic charwd designsize \
    fontmaking charexists \
    cullit currenttransform gfcorners grayfont hround \
    imagerules lowres_fix nodisplays notransforms openit \
    displaying currentwindow screen_rows screen_cols \
    pixels_per_inch cull display openwindow numspecial \
    totalweight autorounding fillin proofing tracingpens \
    xoffset chardx granularity smoothing turningcheck yoffset \
    chardy hppp tracingedges vppp \
    extra_beginfig extra_endfig mpxbreak \
    end

keywordclass.metapost.plain=\
    ahangle ahlength bboxmargin defaultpen defaultscale \
    labeloffset background currentpen currentpicture cuttings \
    defaultfont extra_beginfig extra_endfig \
    beveled black blue bp butt cc cm dd ditto down epsilon \
    evenly fullcircle green halfcircle identity in infinity left \
    mitered mm origin pensquare pt quartercircle red right \
    rounded squared unitsquare up white withdots \
    abs bbox ceiling center cutafter cutbefore dir \
    directionpoint div dotprod intersectionpoint inverse mod lft \
    round rt unitvector whatever \
    cutdraw draw drawarrow drawdblarrow fill filldraw drawdot \
    loggingall pickup tracingall tracingnone undraw unfill \
    unfilldraw \
    buildcycle dashpattern decr dotlabel dotlabels drawoptions \
    incr label labels max min thelabel z \
    beginchar blacker capsule_end change_width \
    define_blacker_pixels define_corrected_pixels \
    define_good_x_pixels define_good_y_pixels \
    define_horizontal_corrected_pixels define_pixels \
    define_whole_blacker_pixels define_whole_pixels \
    define_whole_vertical_blacker_pixels \
    define_whole_vertical_pixels endchar extra_beginchar \
    extra_endchar extra_setup font_coding_scheme\
    font_extra_space

keywordclass.metapost.all=\
    $(keywordclass.metapost.tex) \
    $(keywordclass.metapost.primitives) \
    $(keywordclass.metapost.plain)

keywordclass.metafun.all=

keywords.$(file.patterns.metapost)=$(keywordclass.metapost.all)

keywords.$(file.patterns.metafun)=$(keywordclass.metapost.all)
keywords2.$(file.patterns.metafun)=$(keywordclass.metafun.all)

import metafun-scite.properties



file.patterns.mmixal=*.mms
filter.mmixal=MMIXAL (mms)|$(file.patterns.mmixal)|

lexer.$(file.patterns.mmixal)=mmixal

opcodes=2ADDU 4ADDU 8ADDU 16ADDU ADD ADDU AND ANDNH ANDNL ANDNMH ANDNML \
	BDIF BEV BN BNN BNP BNZ BOD BP BSPEC BYTE BZ CMP CMPU CSEV CSN CSNN CSNP CSNZ CSOD CSP CSWAP CSZ \
	DIV DIVU ESPEC EXPR FADD FCMP FCMPE FDIV FEQL FEQLE FIX FIXU FLOT FLOTU FMUL FREM FSQRT FSUB FUN FUNE \
	GET GETA GO GREG I_BIT INCH INCL INCMH INCML IS JMP LDA LDB LDBU LDHT LDO LDOU LDSF LDT LDTU LDUNC LDVTS LDW LDWU LOC LOCAL \
	MOR MUL MULU MUX MXOR NAND NEG NEGU NNIX NOR NXOR O_BIT OCTA ODIF OR ORH ORL ORMH ORML ORN \
	PBEV PBN PBNN PBNP PBNZ PBOD PBP PBZ POP PREFIX PREGO PRELD PREST PUSHGO PUSHJ PUT \
	RESUME SAVE SET SETH SETL SETMH SETML SFLOT SFLOTU SL SLU SR SRU \
	STB STBU STCO STHT STO STOU STSF STT STTU STUNC STW STWU SUB SUBU SWYM SYNC SYNCD TDIF TETRA TRAP TRIP UNSAVE \
	WDIF WYDEXOR ZSEV ZSN ZSNN ZSNP ZSNZ ZSOD ZSP ZSZ

special_register=rA rB rC rD rE rF rG rH rI rJ rK rL rM rN rO rP rQ rR rS rT rU rV rW rX rY rZ rBB rTT rWW rXX rYY rZZ

predef_symbols=@ Text_Segment Data_Segment Pool_Segment Stack_Segment \
	StdErr StdIn StdOut \
	Fopen Fclose Fread Fwrite Fgets Fputs Fgetws Fputws Ftell Fseek \
	TextRead TextWrite BinaryRead BinaryWrite BinaryReadWrite

keywords.$(file.patterns.mmixal)=$(opcodes)
keywords2.$(file.patterns.mmixal)=$(special_register)
keywords3.$(file.patterns.mmixal)=$(predef_symbols)

style.mmixal.0=
style.mmixal.1=$(colour.code.comment.line),$(font.code.comment.line)
style.mmixal.2=$(font.base)
style.mmixal.3=
style.mmixal.4=
style.mmixal.5=$(colour.keyword),bold
style.mmixal.6=$(colour.error)
style.mmixal.7=
style.mmixal.8=
style.mmixal.9=$(colour.number)
style.mmixal.10=$(font.base)
style.mmixal.11=$(colour.char)
style.mmixal.12=$(colour.string)
style.mmixal.13=fore:#7F007F
style.mmixal.14=fore:#7F0000
style.mmixal.15=bold
style.mmixal.16=fore:#FF7777
style.mmixal.17=$(colour.code.comment.line),$(font.code.comment.line)

comment.block.mmixal=%

tab.size.$(file.patterns.mmixal)=16
indent.size.$(file.patterns.mmixal)=16
backspace.unindents

command.compile.$(file.patterns.mmixal)=mmixal -l $(FileName).map -b 200 $(FilePath)
command.go.$(file.patterns.mmixal)=mmix $(1) $(FileName).mmo
command.name.2.$(file.patterns.mmixal)=mmotype
command.2.$(file.patterns.mmixal)=mmotype $(FileName).mmo $(FileName).out
file.patterns.nncron=*.tab;*.spf

lexer.$(file.patterns.nncron)=nncrontab

filter.nncrontab=nnCron files (tab spf)|$(file.patterns.nncron)|

word.characters.$(file.patterns.nncron)=$(chars.alpha)$(chars.numeric)%-

comment.block.nncrontab=\ 


keywords.$(file.patterns.nncron)=\
AGAIN ALLOT AND Action BEGIN CASE COMPARE CONSTANT CREATE DO Days ELSE \
ENDCASE ENDOF EVAL-SUBST EVALUATE FALSE Hours I IF LEAVE LOOP Minutes \
Months NOT OF OFF ON OR PAD REPEAT Rule SET THEN TRUE Time UNTIL VALUE \
VARIABLE WHILE WeekDays Years 

keywords2.$(file.patterns.nncron)=\
</JScript> </SCRIPT> </VBScript> <JScript> <VBScript> ACCESS-DATE BEEP \
CALL_DIAL CALL_HANGUP CHAR CLIPBOARD CONSOLE CREATION-DATE CUR-DATE DATE- \
DATE-INTERVAL DELAY DIAL DIR-CREATE DIR-DELETE DIR-EMPTY DIR-SIZE Day@ \
Domain ERR-MSG EXIST FILE-ACCESS-DATE FILE-APPEND FILE-COPY FILE-CREATE \
FILE-CREATION-DATE FILE-CROP FILE-DATE FILE-DELETE FILE-EMPTY FILE-EXIST \
FILE-MOVE FILE-RENAME FILE-SIZE FILE-WRITE FILE-WRITE-DATE FOR-CHILD-WINDOWS \
FOR-FILES FOR-WINDOWS FREE-SPACE GET-CUR-TIME GET-REG GET-VER GetTickCount \
HANGUP HIDE-ICON HINT HINT-OFF HINT-POS HINT-SIZE HINTW HOST-EXIST Hour@ \
IDLE INTERVAL IS-ARCHIVE IS-DIR IS-HIDDEN IS-READONLY IS-SYSTEM KILL LAUNCH \
LOG LOGGEDON LOGOFF LogonBatch LogonInteractive LogonNetwork MOUSE-LBCLK \
MOUSE-LBDCLK MOUSE-LBDN MOUSE-LBUP MOUSE-MOVE MOUSE-MOVER MOUSE-MOVEW \
MOUSE-RBCLK MOUSE-RBDCLK MOUSE-RBDN MOUSE-RBUP MSG Min@ Mon@ \
MonitorResponseTime NHOST-EXIST No ONLINE PAUSE PLAY-SOUND PLAY-SOUNDW \
POP3-CHECK POWEROFF PROC-EXIST PROC-TIME PURGE-OLD PURGE-OLDA PURGE-OLDW \
Password QSTART-APP QSTART-APPW QUERY QUIT RASDomain RASError RASPassword \
RASPhone RASSecPassword RASUser RE-ALL RE-MATCH REBOOT REG-DELETE-KEY \
REG-DELETE-VALUE REG-DWORD REG-SZ REMINDER RUN SEND-KEYS SEND-KEYS-DELAY \
SHOW-ICON SHUTDOWN START-APP START-APPW START-QUIT START-TIME Sec@ \
SecPassword THINT THINTW TimeSec@ TMSG TQUERY User WDay@ WIN-ACTIVATE \
WIN-ACTIVE WIN-CLICK WIN-CLOSE WIN-EXIST WIN-HIDE WIN-HWND WIN-MAXIMIZE \
WIN-MINIMIZE WIN-MOVE WIN-MOVER WIN-RESTORE WIN-SEND-KEYS WIN-SHOW \
WIN-TERMINATE WIN-TOPMOST WIN-VER WIN-WAIT WINAPI WRITE-DATE WatchClipboard \
WatchConnect WatchDir WatchDisconnect WatchDriveInsert WatchDriveRemove \
WatchFile WatchProc WatchProcStop WatchWinActivate WatchWinCreate \
WatchWinDestroy WatchWindow WinNT Year@ Yes 

keywords3.$(file.patterns.nncron)=\
ALL AboveNormalPriority AsService BelowNormalPriority FILESONLY \
HighPriority IdlePriority LoadProfile NoActive NoDel NoLog NoRunAs \
NormalPriority OnceADay OnceAHour OnceAMonth OnceAWeek RECURSIVE \
RealtimePriority RunOnce SWHide ShowMaximized ShowMinimized ShowNoActivate \
ShowNormal StartIn StartPos StartSize TODEPTH WATCH-CHANGE-ATTRIBUTES \
WATCH-CHANGE-DIR-NAME WATCH-CHANGE-FILE-NAME WATCH-CHANGE-LAST-WRITE \
WATCH-CHANGE-SECURITY WATCH-CHANGE-SIZE WaitFor WatchSubtree WithoutProfile 

style.nncrontab.0=
style.nncrontab.1=fore:#007F00,$(font.comment)
style.nncrontab.2=$(colour.string),back:#606060,fore:#FFFF00
style.nncrontab.3=fore:#00007F,bold
style.nncrontab.4=fore:#000000,bold
style.nncrontab.5=fore:#00007F,italics
style.nncrontab.6=fore:#000000,bold,back:#FFE0FF
style.nncrontab.7=fore:#007F7F
style.nncrontab.8=fore:#7F007F,$(font.monospace)
style.nncrontab.9=back:#FFFFE0


filter.nsis=NSIS (nsi nsh)|*.nsi;*.nsh|
file.patterns.nsis=*.nsi;*.nsh
lexer.$(file.patterns.nsis)=nsis

nsis.uservars=1

keywords.$(file.patterns.nsis)=What Abort AddSize AllowRootDirInstall AutoCloseWindow \
BGGradient BrandingText BringToFront CRCCheck Call CallInstDLL Caption ClearErrors \
CompletedText ComponentText CopyFiles CreateDirectory CreateShortCut Delete \
DeleteINISec DeleteINIStr DeleteRegKey DeleteRegValue DetailPrint DetailsButtonText \
DirShow DirText DisabledBitmap EnabledBitmap EnumRegKey EnumRegValue Exch Exec \
ExecShell ExecWait ExpandEnvStrings File FileClose FileErrorText FileOpen FileRead \
FileReadByte FileSeek FileWrite FileWriteByte FindClose FindFirst FindNext FindWindow \
Function FunctionEnd GetCurrentAddress GetDLLVersionLocal GetDllVersion GetFileTime \
GetFileTimeLocal GetFullPathName GetFunctionAddress GetLabelAddress GetTempFileName \
Goto HideWindow Icon IfErrors IfFileExists IfRebootFlag InstProgressFlags InstType \
InstallButtonText InstallColors InstallDir InstallDirRegKey IntCmp IntCmpU IntFmt IntOp \
IsWindow LicenseData LicenseText MessageBox MiscButtonText Name OutFile Pop Push \
Quit RMDir ReadEnvStr ReadINIStr ReadRegDword ReadRegStr Reboot RegDLL Rename \
Return SearchPath Section SectionDivider SectionEnd SectionIn SendMessage SetAutoClose \
SetCompress SetDatablockOptimize SetDateSave SetDetailsPrint SetDetailsView SetErrors \
SetFileAttributes SetOutPath SetOverwrite SetRebootFlag ShowInstDetails ShowUninstDetails \
SilentInstall SilentUnInstall Sleep SpaceTexts StrCmp StrCpy StrLen SubCaption UnRegDLL \
UninstallButtonText UninstallCaption UninstallEXEName UninstallIcon UninstallSubCaption \
UninstallText WindowIcon WriteINIStr WriteRegBin WriteRegDword WriteRegExpandStr \
WriteRegStr WriteUninstaller SectionGetFlags SectionSetFlags SectionSetText SectionGetText \
LogText LogSet CreateFont SetShellVarContext SetStaticBkColor SetBrandingImage PluginDir \
SubSectionEnd SubSection CheckBitmap ChangeUI SetFont AddBrandingImage XPStyle Var \
LangString !define !undef !ifdef !ifndef !endif !else !macro !echo !warning !error !verbose \
!macroend !insertmacro !system !include !cd !packhdr

keywords2.$(file.patterns.nsis)=$0 $1 $2 $3 $4 $5 $6 $7 $8 $9 \
$R0 $R1 $R2 $R3 $R4 $R5 $R6 $R7 $R8 $R9 $CMDLINE $DESKTOP \
$EXEDIR $HWNDPARENT $INSTDIR $OUTDIR $PROGRAMFILES ${NSISDIR} $\n $\r \
$QUICKLAUNCH $SMPROGRAMS $SMSTARTUP $STARTMENU $SYSDIR $TEMP $WINDIR

keywords3.$(file.patterns.nsis)=ARCHIVE FILE_ATTRIBUTE_ARCHIVE FILE_ATTRIBUTE_HIDDEN \
FILE_ATTRIBUTE_NORMAL FILE_ATTRIBUTE_OFFLINE FILE_ATTRIBUTE_READONLY \
FILE_ATTRIBUTE_SYSTEM FILE_ATTRIBUTE_TEMPORARY HIDDEN HKCC HKCR HKCU \
HKDD HKEY_CLASSES_ROOT HKEY_CURRENT_CONFIG HKEY_CURRENT_USER HKEY_DYN_DATA \
HKEY_LOCAL_MACHINE HKEY_PERFORMANCE_DATA HKEY_USERS HKLM HKPD HKU IDABORT \
IDCANCEL IDIGNORE IDNO IDOK IDRETRY IDYES MB_ABORTRETRYIGNORE MB_DEFBUTTON1 \
MB_DEFBUTTON2 MB_DEFBUTTON3 MB_DEFBUTTON4 MB_ICONEXCLAMATION \
MB_ICONINFORMATION MB_ICONQUESTION MB_ICONSTOP MB_OK MB_OKCANCEL \
MB_RETRYCANCEL MB_RIGHT MB_SETFOREGROUND MB_TOPMOST MB_YESNO MB_YESNOCANCEL \
NORMAL OFFLINE READONLY SW_SHOWMAXIMIZED SW_SHOWMINIMIZED SW_SHOWNORMAL \
SYSTEM TEMPORARY auto colored false force hide ifnewer nevershow normal \
off on show silent silentlog smooth true try


style.nsis.0=fore:#000000,$(font.base)
style.nsis.1=fore:#007F00,$(font.comment)
style.nsis.2=fore:#999999,back:#EEEEEE
style.nsis.3=fore:#999999,back:#EEEEEE
style.nsis.4=fore:#999999,back:#EEEEEE
style.nsis.5=fore:#00007F,bold
style.nsis.6=fore:#CC3300
style.nsis.7=fore:#FF9900
style.nsis.8=fore:#000000
style.nsis.9=fore:#00007F,bold
style.nsis.10=fore:#00007F,bold
style.nsis.11=fore:#00007F,bold
style.nsis.12=fore:#00007F,bold
style.nsis.13=fore:#CC3300,back:#EEEEEE
style.nsis.14=fore:#007F7F

command.compile.$(file.patterns.nsis)=c:/program files/nsis/makensis.exe "$(FilePath)"
command.build.$(file.patterns.nsis)=c:/program files/nsis/makensis.exe "$(FilePath)"
command.go.*.$(file.patterns.nsis)=$(FileName)




file.patterns.props=*.properties;*.ini;*.inf;*.reg;*.url;*.cfg;*.cnf;*.aut
file.patterns.text=*.txt;*.log;*.lst;*.doc;*.diz;*.nfo
file.patterns.batch=*.bat;*.cmd;*.nt
file.patterns.diff=*.diff;*.patch
file.patterns.make=makefile;Makefile;*.mak;configure*

filter.properties=Properties (ini inf reg url cfg cnf)|$(file.patterns.props)|
filter.text=Text (txt log lst doc diz nfo)|$(file.patterns.text);make*|
filter.batch=Batch (bat cmd nt)|$(file.patterns.batch)|
filter.diff=Difference (diff patch)|$(file.patterns.diff)|

lexer.$(file.patterns.props)=props
lexer.$(file.patterns.batch)=batch
lexer.*.err=errorlist
lexer.$(file.patterns.make)=makefile
lexer.*.iface=makefile
lexer.$(file.patterns.diff)=diff

word.characters.$(file.patterns.text)=$(chars.alpha)$(chars.numeric)$(chars.accented)-'

colour.other.operator=fore:#B06000


style.props.0=
style.props.1=fore:#007F7F,$(font.comment)
style.props.2=$(colour.string),back:#E0F0F0,eolfilled
style.props.3=$(colour.other.operator)
style.props.4=$(colour.preproc)
style.props.34=fore:#0000FF,notbold
style.props.35=fore:#FF0000,notbold
comment.block.props=#~
preprocessor.symbol.$(file.patterns.make)=!
preprocessor.start.$(file.patterns.make)=IF IFDEF IFNDEF
preprocessor.middle.$(file.patterns.make)=ELSE ELSEIF ELSEIFDEF ELSEIFNDEF
preprocessor.end.$(file.patterns.make)=ENDIF


keywordclass.batch=rem set if exist errorlevel for in do \
break call chcp cd chdir choice cls country ctty date del erase dir echo \
exit goto loadfix loadhigh mkdir md move path pause prompt rename ren \
rmdir rd shift time type ver verify vol \
com con lpt nul
keywords.$(file.patterns.batch)=$(keywordclass.batch)

style.batch.0=fore:#000000
style.batch.1=fore:#007F00,$(font.comment)
style.batch.2=$(colour.keyword)
style.batch.3=$(colour.string),back:#606060,fore:#FFFF00,eolfilled
style.batch.4=$(colour.preproc)
style.batch.5=$(colour.keyword),$(font.monospace),bold
style.batch.6=back:#FFFFE0
style.batch.7=$(colour.other.operator)

comment.block.batch=REM ~


style.makefile.0=fore:#000000
style.makefile.1=$(colour.other.comment),$(font.code.comment.box)
style.makefile.2=$(colour.preproc)
style.makefile.3=fore:#000080
style.makefile.4=$(colour.other.operator)
style.makefile.5=fore:#A00000
style.makefile.9=$(colour.error),eolfilled
style.makefile.34=fore:#0000FF,notbold
style.makefile.35=fore:#FF0000,notbold

comment.block.makefile=#~


style.errorlist.32=fore:#B06000,$(font.small)
style.errorlist.0=fore:#000000
style.errorlist.1=fore:#FF0000
style.errorlist.2=fore:#800080
style.errorlist.3=fore:#808000
style.errorlist.4=fore:#0000FF
style.errorlist.5=fore:#B06000
style.errorlist.6=fore:#FF0000
style.errorlist.7=fore:#FF0000
style.errorlist.8=fore:#FF0000
style.errorlist.9=fore:#FF00FF
style.errorlist.10=fore:#007F00
style.errorlist.11=fore:#00007F
style.errorlist.12=fore:#007F7F
style.errorlist.13=fore:#7F0000
style.errorlist.14=fore:#FF0000
style.errorlist.15=fore:#FF0000
style.errorlist.16=fore:#FF0000
style.errorlist.17=fore:#FF0000
style.errorlist.18=fore:#FF0000
style.errorlist.33=$(font.small)


style.diff.0=fore:#000000
style.diff.1=fore:#007F00
style.diff.2=fore:#7F7F00
style.diff.3=fore:#7F0000
style.diff.4=fore:#7F007F
style.diff.5=fore:#007F7F
style.diff.6=fore:#00007F

command.build.makefile=make
command.build.*.mak=make

if PLAT_WIN
	command.go.*.bat=$(FileNameExt)
	command.name.0.*.bat=Execute Selection
	command.0.*.bat=$(CurrentSelection)
	command.name.1.*.mak=nmake
	command.1.*.mak=nmake -f $(FileNameExt)

filter.pascal=Pascal (dpr dpk pas dfm inc)|*.dpr;*.dpk;*.pas;*.dfm;*.inc;*.pp|

file.patterns.pascal=*.dpr;*.dpk;*.pas;*.dfm;*.inc;*.pp
lexer.$(file.patterns.pascal)=pascal

keywordclass.pascal=and array asm begin case cdecl class const constructor default \
destructor div do downto else end end. except exit exports external far file \
finalization finally for function goto if implementation in index inherited \
initialization inline interface label library message mod near nil not \
object of on or out overload override packed pascal private procedure program \
property protected public published raise read record register repeat resourcestring \
safecall set shl shr stdcall stored string then threadvar to try type unit \
until uses var virtual while with write xor

keywordclass.pascalclasses=write read default public protected private property published stored

keywords.$(file.patterns.pascal)=$(keywordclass.pascal)
keywords2.$(file.patterns.pascal)=$(keywordclass.pascalclasses)

style.pascal.0=fore:#000000,$(font.pascal)
style.pascal.1=fore:#007F00,$(font.comment)
style.pascal.2=fore:#007F00,$(font.comment)
style.pascal.3=fore:#7F7F7F
style.pascal.4=fore:#007F7F

style.pascal.5=fore:#00007F,bold
style.pascal.6=fore:#7F007F,italics,$(font.comment)
style.pascal.7=fore:#7F007F,italics,$(font.text)
style.pascal.8=fore:#007F7F
style.pascal.9=fore:#7F7F00
style.pascal.10=fore:#000000
style.pascal.14=fore:#008080
style.pascal.32=fore:#800000
style.pascal.34=fore:#0000FF,notbold
style.pascal.35=fore:#FF0000,notbold
braces.pascal.style=10

statement.indent.$(file.patterns.pascal)=5 case catch class default do else for then \
private protected public struct try union while type
statement.end.$(file.patterns.pascal)=10 ;
statement.lookback.$(file.patterns.pascal)=20
block.start.$(file.patterns.pascal)=10 begin
block.end.$(file.patterns.pascal)=10 end



command.compile.*.pas=fpc "$(FilePath)"

if PLAT_WIN
	command.go.*.pas="$(FileName).exe"
	command.go.subsystem.*.pas=2
if PLAT_GTK
	command.go.*.pas="kvt -e $(FileName)"

command.build.*.pas=fpc -B "$(FilePath)"
command.build.subsystem.*.pas=1

command.name.0.*.pas=Debug Compile
command.0.*.pas=fpc -g "$(FilePath)"
command.name.1.*.pas=Debug Build
command.1.*.pas=fpc -g -B "$(FilePath)"
command.name.2.*.pas=GDB
if PLAT_WIN
	command.2.*.pas=gdbpasw "$(FileName)"
if PLAT_GTK
	command.2.*.pas=gdb "$(FileName)"
	command.name.3.*.pas=DDD
	command.3.*.pas=ddd "$(FileName)"


file.patterns.perl=*.pl;*.pm;*.cgi;*.pod
file.patterns.bash=*.sh;*.bsh

filter.perl=Perl (pl pm)|$(file.patterns.perl)|
filter.bash=Bash (sh bsh)|$(file.patterns.bash)|

lexer.$(file.patterns.perl)=perl
lexer.$(file.patterns.bash)=bash

keywords.$(file.patterns.perl)=\
NULL __FILE__ __LINE__ __PACKAGE__ __DATA__ __END__ AUTOLOAD \
BEGIN CORE DESTROY END EQ GE GT INIT LE LT NE CHECK abs accept \
alarm and atan2 bind binmode bless caller chdir chmod chomp chop \
chown chr chroot close closedir cmp connect continue cos crypt \
dbmclose dbmopen defined delete die do dump each else elsif endgrent \
endhostent endnetent endprotoent endpwent endservent eof eq eval \
exec exists exit exp fcntl fileno flock for foreach fork format \
formline ge getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname \
gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername \
getpgrp getppid getpriority getprotobyname getprotobynumber getprotoent \
getpwent getpwnam getpwuid getservbyname getservbyport getservent \
getsockname getsockopt glob gmtime goto grep gt hex if index \
int ioctl join keys kill last lc lcfirst le length link listen \
local localtime lock log lstat lt m map mkdir msgctl msgget msgrcv \
msgsnd my ne next no not oct open opendir or ord our pack package \
pipe pop pos print printf prototype push q qq qr quotemeta qu \
qw qx rand read readdir readline readlink readpipe recv redo \
ref rename require reset return reverse rewinddir rindex rmdir \
s scalar seek seekdir select semctl semget semop send setgrent \
sethostent setnetent setpgrp setpriority setprotoent setpwent \
setservent setsockopt shift shmctl shmget shmread shmwrite shutdown \
sin sleep socket socketpair sort splice split sprintf sqrt srand \
stat study sub substr symlink syscall sysopen sysread sysseek \
system syswrite tell telldir tie tied time times tr truncate \
uc ucfirst umask undef unless unlink unpack unshift untie until \
use utime values vec wait waitpid wantarray warn while write \
x xor y

word.characters.$(file.patterns.perl)=$(chars.alpha)$(chars.numeric)_$@%&

comment.block.perl=#~

colour.perl.heredoc=$(colour.embedded.comment)

bash_keywords1=alias \
ar asa awk banner basename bash bc bdiff break \
bunzip2 bzip2 cal calendar case cat cc cd chmod cksum \
clear cmp col comm compress continue cp cpio crypt \
csplit ctags cut date dc dd declare deroff dev df diff diff3 \
dircmp dirname do done du echo ed egrep elif else env \
esac eval ex exec exit expand export expr false fc \
fgrep fi file find fmt fold for function functions \
getconf getopt getopts grep gres hash head help \
history iconv id if in integer jobs join kill local lc \
let line ln logname look ls m4 mail mailx make \
man mkdir more mt mv newgrp nl nm nohup ntps od \
pack paste patch pathchk pax pcat perl pg pr print \
printf ps pwd read readonly red return rev rm rmdir \
sed select set sh shift size sleep sort spell \
split start stop strings strip stty sum suspend \
sync tail tar tee test then time times touch tr \
trap true tsort tty type typeset ulimit umask unalias \
uname uncompress unexpand uniq unpack unset until \
uudecode uuencode vi vim vpax wait wc whence which \
while who wpaste wstart xargs zcat

bash_keywords2=chgrp chown chroot dir dircolors \
factor groups hostid install link md5sum mkfifo \
mknod nice pinky printenv ptx readlink seq \
sha1sum shred stat su tac unlink users vdir whoami yes

keywords.$(file.patterns.bash)=$(bash_keywords1) $(bash_keywords2)

word.characters.$(file.patterns.bash)=$(chars.alpha)$(chars.numeric)_$@%&

comment.block.bash=#~

colour.bash.heredoc=$(colour.embedded.comment)

style.perl.32=
style.perl.0=fore:#808080,$(font.base)
style.perl.1=$(colour.error)
style.perl.2=$(colour.code.comment.box),$(font.code.comment.box)
style.perl.3=fore:#004000,back:#E0FFE0,$(font.text),eolfilled
style.perl.4=$(colour.number)
style.perl.5=$(colour.keyword),bold
style.perl.6=$(colour.string),$(font.monospace)
style.perl.7=$(colour.char),$(font.monospace)
style.perl.8=$(colour.notused),$(font.notused)
style.perl.9=$(colour.notused),$(font.notused)
style.perl.10=$(colour.operator),bold
style.perl.11=fore:#000000
style.perl.12=fore:#000000,back:#FFE0E0
style.perl.13=fore:#000000,back:#FFFFE0
style.perl.14=fore:#000000,back:#FFE0FF
style.perl.15=fore:#000000,back:#E0E0E0
style.perl.17=fore:#000000,back:#A0FFA0
style.perl.18=fore:#000000,back:#F0E080
style.perl.19=fore:#FFFF00,back:#8080A0
style.perl.20=fore:#FFFF00,back:#A08080
style.perl.21=fore:#600000,back:#FFF0D8,eolfilled
style.perl.22=fore:#000000,back:#DDD0DD
style.perl.23=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
style.perl.24=fore:#7F007F,back:#DDD0DD,eolfilled,bold
style.perl.25=fore:#7F007F,back:#DDD0DD,eolfilled,italics
style.perl.26=fore:#7F007F,$(font.monospace),notbold
style.perl.27=$(style.perl.6)
style.perl.28=$(style.perl.20)
style.perl.29=$(style.perl.17)
style.perl.30=$(style.perl.13)
braces.perl.style=10

style.bash.32=
style.bash.0=fore:#808080,$(font.base)
style.bash.1=$(colour.error)
style.bash.2=$(colour.code.comment.box),$(font.code.comment.box)
style.bash.3=$(colour.number)
style.bash.4=$(colour.keyword),bold
style.bash.5=$(colour.string),$(font.monospace)
style.bash.6=$(colour.char),$(font.monospace)
style.bash.7=$(colour.operator),bold
style.bash.8=fore:#000000
style.bash.9=fore:#000000,back:#FFE0E0
style.bash.10=fore:#000000,back:#FFFFE0
style.bash.11=fore:#FFFF00,back:#A08080
style.bash.12=fore:#000000,back:#DDD0DD
style.bash.13=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
braces.bash.style=10

command.go.$(file.patterns.perl)=perl -w $(FileNameExt)

command.compile.$(file.patterns.perl)=perl -c -w $(FileNameExt)
command.name.0.$(file.patterns.perl)=Lint
command.0.$(file.patterns.perl)=perl -MO=Lint,all $(FileNameExt)

command.name.1.$(file.patterns.perl)=Check Syntax
command.1.$(file.patterns.perl)=perl -cw $(FileNameExt)

command.name.2.$(file.patterns.perl)=Code Profiler
command.2.$(file.patterns.perl)=perl -d:DProf $(FileNameExt)

command.name.3.$(file.patterns.perl)=Profiler Parser
command.3.$(file.patterns.perl)=C:\Perl\bin\dprofpp.bat $(FileDir)\tmon.out

file.patterns.pov=*.pov;*.inc

filter.pov=POV-Ray SDL (pov)|$(file.patterns.pov)|

indent.size.*.pov=2
tab.size.*.pov=2
use.tabs.*.pov=0
indent.size.*.inc=2
tab.size.*.inc=2
use.tabs.*.inc=0


file.patterns.braces=$(file.patterns.pov)

lexer.$(file.patterns.pov)=pov

word.chars.pov=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.pov)=$(word.chars.pov)

api.*.pov=POV-Ray_SDL.api
autocomplete.pov.start.characters=.
calltip.pov.word.characters=.$(word.chars.pov)

comment.block.at.line.start.pov=1
comment.block.pov=//~
comment.stream.start.pov=/*
comment.stream.end.pov=*/
comment.box.start.pov=/*
comment.box.middle.pov= *
comment.box.end.pov= */
fold.comment=1
fold.directive=1


preprocessor.symbol.$(file.patterns.pov)=#
preprocessor.start.$(file.patterns.pov)=if ifdef ifndef switch while macro
preprocessor.middle.$(file.patterns.pov)=else
preprocessor.end.$(file.patterns.pov)=end

keywordclass.pov=declare local include undef fopen fclose read write default version \
case range break debug error warning \
if ifdef ifndef switch while macro else end

keywords.$(file.patterns.pov)=$(keywordclass.pov)

keywords2.$(file.patterns.pov)=camera light_source light_group \
object blob sphere cylinder box cone height_field julia_fractal \
lathe prism sphere_sweep superellipsoid sor text torus \
bicubic_patch disc mesh mesh2 polygon triangle smooth_triangle \
plane poly cubic quartic quadric isosurface parametric \
union intersection difference merge function array spline \
vertex_vectors normal_vectors uv_vectors face_indices normal_indices uv_indices \
texture texture_list interior_texture \
texture_map material_map image_map color_map colour_map pigment_map \
normal_map slope_map bump_map density_map \
pigment normal material interior finish reflection irid slope pigment_pattern image_pattern \
warp media scattering density background fog sky_sphere rainbow \
global_settings radiosity photons pattern \
transform looks_like projected_through contained_by clipped_by bounded_by

keywords3.$(file.patterns.pov)=linear_spline quadratic_spline cubic_spline natural_spline bezier_spline b_spline \
read write append inverse open \
perspective orthographic fisheye ultra_wide_angle omnimax panoramic \
spherical spotlight jitter circular orient \
media_attenuation media_interaction shadowless parallel \
refraction collect pass_through global_lights hierarchy sturm smooth \
gif tga iff pot png pgm ppm jpeg tiff sys ttf \
quaternion hypercomplex linear_sweep conic_sweep \
type all_intersections split_union cutaway_textures \
no_shadow no_image no_reflection double_illuminate hollow \
uv_mapping all use_index use_color use_colour no_bump_scale \
conserve_energy fresnel \
average agate boxed bozo bumps cells crackle cylindrical density_file dents \
facets granite leopard marble onion planar quilted radial ripples spotted waves wood wrinkles \
solid use_alpha interpolate magnet noise_generator toroidal \
ramp_wave triangle_wave sine_wave scallop_wave cubic_wave poly_wave \
once map_type method fog_type hf_gray_16 charset ascii utf8 \
rotate scale translate matrix location right up direction sky \
angle look_at aperture blur_samples focal_point confidence variance \
radius falloff tightness point_at area_light adaptive fade_distance fade_power \
threshold strength water_level tolerance max_iteration precision slice \
u_steps v_steps flatness inside_vector \
accuracy max_gradient evaluate max_trace precompute \
target ior dispersion dispersion_samples caustics \
color colour rgb rgbf rgbt rgbft red green blue filter transmit gray hf \
fade_color fade_colour quick_color quick_colour \
brick checker hexagon brick_size mortar bump_size \
ambient diffuse brilliance crand phong phong_size metallic specular \
roughness reflection_exponent exponent thickness \
gradient spiral1 spiral2 agate_turb form metric \
offset df3 coords size mandel exterior julia \
control0 control1 altitude turbulence octaves omega lambda \
repeat flip black-hole orientation dist_exp major_radius \
frequency phase intervals samples ratio absorption emission aa_threshold aa_level \
eccentricity extinction distance turb_depth fog_offset fog_alt width arc_angle falloff_angle \
adc_bailout ambient_light assumed_gamma irid_wavelength number_of_waves \
always_sample brigthness count error_bound gray_threshold load_file \
low_error_factor max_sample minimum_reuse nearest_count \
pretrace_end pretrace_start recursion_limit save_file \
spacing gather max_trace_level autostop expand_thresholds

keywords4.$(file.patterns.pov)=x y z t u v \
yes no true false on off \
clock clock_delta clock_on final_clock final_frame frame_number \
image_height image_width initial_clock initial_frame pi version

keywords5.$(file.patterns.pov)=abs acos acosh asc asin asinh atan atanh atan2 \
ceil cos cosh defined degrees dimensions dimension_size div exp file_exists floor \
inside int ln log max min mod pow prod radians rand seed select sin sinh sqrt strcmp \
strlen sum tan tanh val vdot vlength min_extent max_extent trace vaxis_rotate \
vcross vrotate vnormalize vturbulence chr concat str strlwr strupr substr vstr \
sqr cube reciprocal pwr

keywords6.$(file.patterns.pov)=

keywords7.$(file.patterns.pov)=

keywords8.$(file.patterns.pov)=


style.pov.32=$(font.code.base)
style.pov.0=fore:#FF0080
style.pov.1=$(colour.code.comment.box),$(font.code.comment.box)
style.pov.2=$(colour.code.comment.line),$(font.code.comment.line)
style.pov.3=$(colour.number)
style.pov.4=$(colour.operator)
style.pov.5=
style.pov.6=$(colour.string)
style.pov.7=back:#E0C0E0,eolfilled,$(font.computer),bold
style.pov.8=$(colour.preproc)
style.pov.9=fore:#804020,$(font.code.comment.doc),italics
style.pov.10=$(colour.keyword),back:#FFD0D0
style.pov.11=$(colour.keyword),back:#FFFFD0
style.pov.12=$(colour.keyword),bold
style.pov.13=$(colour.keyword),back:#D0D0FF
style.pov.14=$(colour.keyword),back:#D0FFD0
style.pov.15=$(colour.keyword),back:#D0D0D0
style.pov.17=$(colour.keyword),back:#E0E0E0
braces.pov.style=4

command.compile.*.pov=pvengine.exe $(FileName)
command.build.*.pov=
command.go.*.pov=pvengine.exe $(FileName)

if PLAT_WIN
	command.help.$(file.patterns.pov)=$(CurrentWord)!D:\Programmes\UImages\POV-Ray 3.5\help\povray35.chm
	command.help.subsystem.$(file.patterns.pov)=4

file.patterns.ps=*.ps

filter.ps=PS (PostScript)|$(file.patterns.ps)|

lexer.$(file.patterns.ps)=ps

ps.tokenize=0
ps.level=3

comment.block.ps=%~

keywords.$(file.patterns.ps)=\
$error = == FontDirectory StandardEncoding UserObjects abs add aload \
anchorsearch and arc arcn arcto array ashow astore atan awidthshow begin bind \
bitshift bytesavailable cachestatus ceiling charpath clear cleardictstack \
cleartomark clip clippath closefile closepath concat concatmatrix copy copypage \
cos count countdictstack countexecstack counttomark currentcmykcolor \
currentcolorspace currentdash currentdict currentfile currentflat currentfont \
currentgray currenthsbcolor currentlinecap currentlinejoin currentlinewidth \
currentmatrix currentmiterlimit currentpagedevice currentpoint currentrgbcolor \
currentscreen currenttransfer cvi cvlit cvn cvr cvrs cvs cvx def defaultmatrix \
definefont dict dictstack div dtransform dup echo end eoclip eofill eq \
erasepage errordict exch exec execstack executeonly executive exit exp false \
file fill findfont flattenpath floor flush flushfile for forall ge get \
getinterval grestore grestoreall gsave gt idetmatrix idiv idtransform if ifelse \
image imagemask index initclip initgraphics initmatrix inustroke invertmatrix \
itransform known kshow le length lineto ln load log loop lt makefont mark \
matrix maxlength mod moveto mul ne neg newpath noaccess nor not null nulldevice \
or pathbbox pathforall pop print prompt pstack put putinterval quit rand rcheck \
rcurveto read readhexstring readline readonly readstring rectstroke repeat \
resetfile restore reversepath rlineto rmoveto roll rotate round rrand run save \
scale scalefont search setblackgeneration setcachedevice setcachelimit \
setcharwidth setcolorscreen setcolortransfer setdash setflat setfont setgray \
sethsbcolor setlinecap setlinejoin setlinewidth setmatrix setmiterlimit \
setpagedevice setrgbcolor setscreen settransfer setvmthreshold show showpage \
sin sqrt srand stack start status statusdict stop stopped store string \
stringwidth stroke strokepath sub systemdict token token transform translate \
true truncate type ueofill undefineresource userdict usertime version vmstatus \
wcheck where widthshow write writehexstring writestring xcheck xor

keywords2.$(file.patterns.ps)=\
GlobalFontDirectory ISOLatin1Encoding SharedFontDirectory UserObject arct \
colorimage cshow currentblackgeneration currentcacheparams currentcmykcolor \
currentcolor currentcolorrendering currentcolorscreen currentcolorspace \
currentcolortransfer currentdevparams currentglobal currentgstate \
currenthalftone currentobjectformat currentoverprint currentpacking \
currentpagedevice currentshared currentstrokeadjust currentsystemparams \
currentundercolorremoval currentuserparams defineresource defineuserobject \
deletefile execform execuserobject filenameforall fileposition filter \
findencoding findresource gcheck globaldict glyphshow gstate ineofill infill \
instroke inueofill inufill inustroke languagelevel makepattern packedarray \
printobject product realtime rectclip rectfill rectstroke renamefile \
resourceforall resourcestatus revision rootfont scheck selectfont serialnumber \
setbbox setblackgeneration setcachedevice2 setcacheparams setcmykcolor setcolor \
setcolorrendering setcolorscreen setcolorspace setcolortranfer setdevparams \
setfileposition setglobal setgstate sethalftone setobjectformat setoverprint \
setpacking setpagedevice setpattern setshared setstrokeadjust setsystemparams \
setucacheparams setundercolorremoval setuserparams setvmthreshold shareddict \
startjob uappend ucache ucachestatus ueofill ufill undef undefinefont \
undefineresource undefineuserobject upath ustroke ustrokepath vmreclaim \
writeobject xshow xyshow yshow

keywords3.$(file.patterns.ps)=\
cliprestore clipsave composefont currentsmoothness findcolorrendering \
setsmoothness shfill

keywords4.$(file.patterns.ps)=\
.begintransparencygroup .begintransparencymask .bytestring .charboxpath \
.currentaccuratecurves .currentblendmode .currentcurvejoin .currentdashadapt \
.currentdotlength .currentfilladjust2 .currentlimitclamp .currentopacityalpha \
.currentoverprintmode .currentrasterop .currentshapealpha \
.currentsourcetransparent .currenttextknockout .currenttexturetransparent \
.dashpath .dicttomark .discardtransparencygroup .discardtransparencymask \
.endtransparencygroup .endtransparencymask .execn .filename .filename \
.fileposition .forceput .forceundef .forgetsave .getbitsrect .getdevice \
.inittransparencymask .knownget .locksafe .makeoperator .namestring .oserrno \
.oserrorstring .peekstring .rectappend .runandhide .setaccuratecurves \
.setblendmode .setcurvejoin .setdashadapt .setdebug .setdefaultmatrix \
.setdotlength .setfilladjust2 .setlimitclamp .setmaxlength .setopacityalpha \
.setoverprintmode .setrasterop .setsafe .setshapealpha .setsourcetransparent \
.settextknockout .settexturetransparent .stringbreak .stringmatch .tempfile \
.type1decrypt .type1encrypt .type1execchar .unread arccos arcsin copydevice \
copyscanlines currentdevice finddevice findlibfile findprotodevice flushpage \
getdeviceprops getenv makeimagedevice makewordimagedevice max min \
putdeviceprops setdevice


style.ps.0=$(font.base)
style.ps.1=$(colour.code.comment.line),$(font.code.comment.line)
style.ps.2=$(colour.code.comment.doc),$(font.code.comment.doc)
style.ps.3=fore:#3060A0,$(font.code.comment.doc)
style.ps.4=$(colour.number)
style.ps.5=$(colour.operator)
style.ps.6=$(colour.keyword),bold
style.ps.7=$(colour.preproc)
style.ps.8=$(colour.preproc),bold
style.ps.9=$(colour.keyword)
style.ps.10=fore:#3060A0
style.ps.11=$(colour.operator),bold
style.ps.12=$(colour.string),$(font.text)
style.ps.13=fore:#3F7F3F
style.ps.14=$(colour.string)
style.ps.15=$(colour.error)
braces.ps.style=11

if PLAT_WIN
    command.go.*.ps=gswin32c "$(FileNameExt)"

if PLAT_GTK
    command.go.*.ps=gs "$(FileNameExt)"


filter.python=Python (py pyw)|*.py;*.pyw|

file.patterns.py=*.py;*.pyw

lexer.$(file.patterns.py)=python

keywordclass.python=and assert break class continue def del elif \
else except exec finally for from global if import in is lambda None \
not or pass print raise return try while yield

keywords.$(file.patterns.py)=$(keywordclass.python)

statement.indent.*.py=10 :
statement.end.*.py=
statement.lookback.*.py=0
block.start.*.py=
block.end.*.py=

tab.timmy.whinge.level=1


comment.block.python=#~

style.python.0=fore:#808080
style.python.1=fore:#007F00,$(font.comment)
style.python.2=fore:#007F7F
style.python.3=fore:#7F007F,$(font.monospace)
style.python.4=fore:#7F007F,$(font.monospace)
style.python.5=fore:#00007F,bold
style.python.6=fore:#7F0000
style.python.7=fore:#7F0000
style.python.8=fore:#0000FF,bold
style.python.9=fore:#007F7F,bold
style.python.10=bold
style.python.11=
style.python.12=fore:#7F7F7F
style.python.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.python.34=fore:#0000FF,bold
style.python.35=fore:#FF0000,bold
braces.python.style=10

if PLAT_WIN
	command.go.*.py=pythonw -u "$(FileNameExt)"
	command.go.subsystem.*.py=1
	command.go.*.pyw=pythonw -u "$(FileNameExt)"
	command.go.subsystem.*.pyw=1

if PLAT_GTK
	command.go.*.py=python -u $(FileNameExt)

command.name.1.*.py=Syntax Check
command.1.*.py=python -c "import py_compile; py_compile.compile(r'$(FilePath)')"

filter.ruby=Ruby (rb)|*.rb|

lexer.*.rb=ruby

file.patterns.rb=*.rb

keywordclass.ruby=__FILE__ and def end in or self unless __LINE__ begin \
defined? ensure module redo super until BEGIN break do false next rescue \
then when END case else for nil require retry true while alias class elsif if \
not return undef yield
keywords.$(file.patterns.rb)=$(keywordclass.ruby)

statement.indent.*.rb=
statement.end*.rb=
statement.lookback.*.rb=1
block.start.*.rb=10

comment.block.ruby=#~

style.ruby.0=fore:#808080
style.ruby.1=fore:#007F00,$(font.comment)
style.ruby.2=fore:#007F7F
style.ruby.3=fore:#7F007F,$(font.monospace)
style.ruby.4=fore:#7F007F,$(font.monospace)
style.ruby.5=fore:#00007F,bold
style.ruby.7=fore:#7F0000
style.ruby.8=fore:#0000FF,bold
style.ruby.9=fore:#007F7F,bold
style.ruby.10=bold
style.ruby.11=fore:#7F7F7F
style.ruby.12=fore:#7F7F7F
style.ruby.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.ruby.34=fore:#0000FF,bold
style.ruby.35=fore:#FF0000,bold
braces.ruby.style=10

if PLAT_WIN
	command.go.*.rb=ruby $(FileNameExt)
	command.go.subsystem.*.rb=1

if PLAT_GTK
	command.go.*.rb=ruby $(FileNameExt)

filter.scriptol=Scriptol (sol)|*.sol|

lexer.*.sol=scriptol

file.patterns.sol=*.sol

keywordclass.scriptol= act action alias always and array as \
bool boolean break by byte \
class case catch const constant continue \
dyn def define dict do double \
echo else elsif end enum error false file for float forever function \
globak gtk \
in if ifdef import include int integer java javax \
let long match mod nil not natural null number \
or print protected public real return redo \
scan script scriptol sol short super static step until using \
var text then this true try \
void volatile while when \
undef zero
keywords.$(file.patterns.sol)=$(keywordclass.scriptol)

statement.indent.*.sol=
statement.end*.sol=
statement.lookback.*.sol=1
block.start.*.sol=10

comment.block.scriptol=`~

style.scriptol.0=fore:#000000
style.scriptol.1=fore:#808080
style.scriptol.2=fore:#007F00,$(font.comment)
style.scriptol.3=fore:#007F00,$(font.comment)
style.scriptol.4=fore:#007F00
style.scriptol.5=fore:#007F00,$(font.comment)
style.scriptol.6=fore:#007F7F
style.scriptol.7=fore:#7F007F,$(font.monospace)
style.scriptol.8=fore:#7F007F,$(font.monospace)
style.scriptol.9=fore:#FF0000,$(font.monospace),back:#E0C0E0,eolfilled
style.scriptol.10=fore:#00007F,bold
style.scriptol.11=bold
style.scriptol.12=fore:#333333
style.scriptol.14=fore:#0000FF,bold


if PLAT_WIN
        command.help.$(file.patterns.sol)="file://$(SciteDefaultHome)\manual.html"
        command.help.subsystem.$(file.patterns.sol)=2

if PLAT_GTK
        command.help.$(file.patterns.sol)=man $(CurrentWord) | col -b
	
command.compile.*.sol=solc -c $(FileNameExt)
command.build.*.sol=solc -be $(FileNameExt)
command.go.*.sol=$(FileName)
command.go.subsystem.*.sol=1

command.name.0.*.sol=XSolP
command.0.*.sol =xsolp -be $(FileNameExt)
command.is.filter.0.*.sol=1

command.name.1.*.sol=XSolC
command.1.*.sol =xsolc -be $(FileNameExt)
command.is.filter.1.*.sol=1

command.name.2.*.sol=Compile to Php
command.2.*.sol=solp -b $(FileNameExt)
command.is.filter.2.*.sol=1

command.name.3.*.sol=Compile Web page
command.3.*.sol=solp -b -w $(FileNameExt)
command.is.filter.3.*.sol=1

command.name.4.*.sol=Interpret
command.4.*.sol=solp $(FileNameExt)
command.is.filter.4.*.sol=1


file.patterns.specman=*.e

filter.specman=Specman (e)|\
$(file.patterns.specman)|

file.patterns.braces=$(file.patterns.specman)

lexer.$(file.patterns.specman)=specman

keywords.$(file.patterns.specman)= \
struct unit \
integer real bool int long uint nibble byte bits bytes bit time string \
var instance event \
verilog vhdl \
on compute start expect check that routine \
specman is also first only with like \
list of all radix hex dec bin ignore illegal \
traceable untraceable \
cover using count_only trace_only at_least transition item ranges \
cross text call task within \
packing low high \
locker address \
body code vec chars \
byte_array external_pointer \
choose matches \
if then else when try \
case casex casez default \
and or not xor \
until repeat while for from to step each do break continue \
before next always -kind network \
index it me in new return result select \
cycle sample events forever \
wait  change  negedge rise fall delay sync sim true detach eventually emit \
gen keep keeping soft before \
define as computed type extend \
variable global sys \
import \
untyped symtab ECHO DOECHO \
initialize non_terminal testgroup delayed exit finish \
out append print outf appendf \
post_generate pre_generate setup_test finalize_test extract_test \
init run copy as_a a set_config dut_error add clear lock quit \
lock unlock release swap quit to_string value stop_run \
crc_8 crc_32 crc_32_flip get_config add0 all_indices and_all \
apply average count delete exists first_index get_indices \
has insert is_a_permutation is_empty key key_exists key_index \
last last_index max max_index max_value min min_index \
min_value or_all pop pop0 push push0 product resize reverse \
sort split sum top top0 unique clear is_all_iterations \
get_enclosing_unit hdl_path exec deep_compare deep_compare_physical \
pack unpack warning error fatal \
size \
files load module ntv source_ref script read write \
initial idle others posedge clock cycles \
statement action command member exp block num file

keywords2.$(file.patterns.specman)= \
TRUE FALSE \
MAX_INT MIN_INT NULL UNDEF \

keywords3.$(file.patterns.specman)= \
any_sequence_item sequence any_sequence_driver driver \
created_driver  parent_sequence \
bfm_interaction_mode PULL_MODE PUSH_MODE MAIN SIMPLE RANDOM \
max_random_count max_random_depth num_of_last_items \
NORMAL NONE FULL LOW HIGH MEDIUM logger message \
get_tags show_units show_actions show_message ignore_tags \
set_style set_screen set_file set_flush_frequency \
set_format set_units set_actions at_message_verbosity \
short_name short_name_path short_name_style \
\
private protected package rerun any_env \
unqualified_clk clk reset_start reset_end \
message_logger verbosity tags to_file \
\
body pre_body post_body get_next_item send_to_bfm \
get_depth get_driver nice_string get_index grab \
is_blocked is_relevant ungrab mid_do post_do post_trace \
pre_do current_grabber get_current_item get_num_items_sent \
get_sequence_trace_list get_trace_list is_grabbed \
try_next_item check_is_relevant delay_clock \
get_sub_drivers regenerate_data wait_for_sequences \
stop

keywords4.$(file.patterns.specman)=

word.chars.specman=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.specman)=$(word.chars.specman)
comment.block.specman=//~
comment.block.at.line.start.specman=1
comment.stream.start.specman=
comment.stream.end.specman=
comment.box.start.specman=
comment.box.middle.specman=
comment.box.end.specman=

fold.comment=1
fold.preprocessor=1
fold.at.else=1


indent.maintain.$(file.patterns.specman)=1;


preprocessor.symbol.$(file.patterns.specman)=#
preprocessor.start.$(file.patterns.specman)=ifdef ifndef
preprocessor.middle.$(file.patterns.specman)=else
preprocessor.end.$(file.patterns.specman)=}



style.specman.32=$(font.base)
style.specman.0=fore:#808080
style.specman.1=$(font.base)
style.specman.2=$(colour.code.comment.line),$(font.code.comment.line)
style.specman.3=fore:red
style.specman.4=$(colour.number)
style.specman.5=$(colour.keyword),bold
style.specman.6=$(colour.string)
style.specman.7=fore:#B00040
style.specman.8=fore:#804080,bold
style.specman.9=$(colour.preproc)
style.specman.10=$(colour.operator),bold
style.specman.11=
style.specman.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.specman.13=fore:#007F00,back:#E0FFE0
style.specman.14=fore:#00005F
style.specman.15=back:#E0F0FF

braces.specman.style=10


filter.sql=SQL (sql)|*.sql|

file.patterns.sql=*.sql
file.patterns.plsql=*.spec;*.body;*.sps;*.spb;*.sf;*.sp

lexer.$(file.patterns.sql)=sql
lexer.$(file.patterns.plsql)=sql

style.sql.0=fore:#808080
style.sql.1=fore:#007F00,$(font.comment)
style.sql.2=fore:#007F00,$(font.comment)
style.sql.3=fore:#7F7F7F
style.sql.4=fore:#007F7F
style.sql.5=fore:#00007F,bold
style.sql.6=fore:#7F007F,$(font.monospace)
style.sql.7=fore:#7F007F,$(font.monospace)
style.sql.8=fore:#007F7F
style.sql.9=fore:#7F7F00
style.sql.10=bold
style.sql.11=
style.sql.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
braces.sql.style=10

keywords.$(file.patterns.sql)=\
absolute action add admin after aggregate \
alias all allocate alter and any are array as asc \
assertion at authorization \
before begin binary bit blob boolean both breadth by \
call cascade cascaded case cast catalog char character \
check class clob close collate collation column commit \
completion connect connection constraint constraints \
constructor continue corresponding create cross cube current \
current_date current_path current_role current_time current_timestamp \
current_user cursor cycle \
data date day deallocate dec decimal declare default \
deferrable deferred delete depth deref desc describe descriptor \
destroy destructor deterministic dictionary diagnostics disconnect \
distinct domain double drop dynamic \
each else end end-exec equals escape every except \
exception exec execute external \
false fetch first float for foreign found from free full \
function \
general get global go goto grant group grouping \
having host hour \
identity if ignore immediate in indicator initialize initially \
inner inout input insert int integer intersect interval \
into is isolation iterate \
join \
key \
language large last lateral leading left less level like \
limit local localtime localtimestamp locator \
map match minute modifies modify module month \
names national natural nchar nclob new next no none \
not null numeric \
object of off old on only open operation option \
or order ordinality out outer output \
pad parameter parameters partial path postfix precision prefix \
preorder prepare preserve primary \
prior privileges procedure public \
read reads real recursive ref references referencing relative \
restrict result return returns revoke right \
role rollback rollup routine row rows \
savepoint schema scroll scope search second section select \
sequence session session_user set sets size smallint some| space \
specific specifictype sql sqlexception sqlstate sqlwarning start \
state statement static structure system_user \
table temporary terminate than then time timestamp \
timezone_hour timezone_minute to trailing transaction translation \
treat trigger true \
under union unique unknown \
unnest update usage user using \
value values varchar variable varying view \
when whenever where with without work write \
year \
zone

keywords.$(file.patterns.plsql)=\
all alter and any array as asc at authid avg begin between \
binary_integer \
body boolean bulk by char char_base check close cluster collect \
comment commit compress connect constant create current currval \
cursor date day declare decimal default delete desc distinct \
do drop else elsif end exception exclusive execute exists exit \
extends false fetch float for forall from function goto group \
having heap hour if immediate in index indicator insert integer \
interface intersect interval into is isolation java level like \
limited lock long loop max min minus minute mlslabel mod mode \
month natural naturaln new nextval nocopy not nowait null number \
number_base ocirowid of on opaque open operator option or order \
organization others out package partition pctfree pls_integer \
positive positiven pragma prior private procedure public raise \
range raw real record ref release return reverse rollback row \
rowid rownum rowtype savepoint second select separate set share \
smallint space sql sqlcode sqlerrm start stddev subtype successful \
sum synonym sysdate table then time timestamp to trigger true \
type uid union unique update use user validate values varchar \
varchar2 variance view when whenever where while with work write \
year zone


filter.tcl=Tcl (tcl)|*.tcl|

lexer.*.tcl=tcl

filter.itcl=itcl (.itcl)|*.itcl|

lexer.*.itcl=tcl

preprocessor.symbol.*.tcl=
preprocessor.start.*.tcl=
preprocessor.middle.*.tcl=
preprocessor.end.*.tcl=

keywordclass.tcl=after append array auto_execok auto_import auto_load \
auto_load_index auto_qualify beep binary break case catch cd clock \
close concat continue dde default echo else elseif encoding eof \
error eval exec exit expr fblocked fconfigure fcopy file \
fileevent flush for foreach format gets glob global history if \
incr info interp join lappend lindex linsert list llength load \
lrange lreplace lsearch lsort namespace open package pid \
pkg_mkIndex proc puts pwd read regexp regsub rename resource \
return scan seek set socket source split string subst switch \
tclLog tclMacPkgSearch tclPkgSetup tclPkgUnknown tell time \
trace unknown unset update uplevel upvar variable vwait while

keywordclass.tk=bell bind bindtags button canvas checkbutton console \
destroy entry event focus font frame grab grid image label listbox menu \
menubutton message pack place radiobutton raise scale scrollbar \
text tk tkwait toplevel winfo wm

keywordclass.itcl=@scope body class code common component configbody \
constructor define destructor hull import inherit itcl itk itk_component \
itk_initialize itk_interior itk_option iwidgets keep method \
private protected public

keywordclass.TkCommands=tkButtonDown tkButtonEnter tkButtonInvoke \
tkButtonLeave tkButtonUp tkCancelRepeat tkCheckRadioInvoke tkDarken \
tkEntryAutoScan 	tkEntryBackspace tkEntryButton1 tkEntryClosestGap \
tkEntryInsert tkEntryKeySelect tkEntryMouseSelect tkEntryNextWord \
tkEntryPaste tkEntryPreviousWord tkEntrySeeInsert tkEntrySetCursor \
tkEntryTranspose tkEventMotifBindings tkFDGetFileTypes tkFirstMenu \
tkFocusGroup_Destroy tkFocusGroup_In tkFocusGroup_Out tkFocusOK \
tkListboxAutoScan tkListboxBeginExtend tkListboxBeginSelect \
tkListboxBeginToggle tkListboxCancel tkListboxDataExtend \
tkListboxExtendUpDown tkListboxMotion tkListboxSelectAll \
tkListboxUpDown tkMbButtonUp tkMbEnter tkMbLeave tkMbMotion \
tkMbPost tkMenuButtonDown tkMenuDownArrow tkMenuDup tkMenuEscape \
tkMenuFind tkMenuFindName tkMenuFirstEntry tkMenuInvoke tkMenuLeave \
tkMenuLeftArrow tkMenuMotion tkMenuNextEntry tkMenuNextMenu \
tkMenuRightArrow tkMenuUnpost tkMenuUpArrow tkMessageBox \
tkPostOverPoint tkRecolorTree tkRestoreOldGrab tkSaveGrabInfo \
tkScaleActivate tkScaleButton2Down tkScaleButtonDown \
tkScaleControlPress tkScaleDrag tkScaleEndDrag tkScaleIncrement \
tkScreenChanged tkScrollButton2Down tkScrollButtonDown \
tkScrollButtonUp tkScrollByPages tkScrollByUnits tkScrollDrag \
tkScrollEndDrag tkScrollSelect tkScrollStartDrag tkScrollToPos  \
tkScrollTopBottom tkTabToWindow tkTearOffMenu tkTextAutoScan \
tkTextButton1 tkTextClosestGap tkTextInsert tkTextKeyExtend \
tkTextKeySelect tkTextNextPara tkTextNextPos tkTextNextWord \
tkTextPaste tkTextPrevPara tkTextPrevPos tkTextResetAnchor \
tkTextScrollPages tkTextSelectTo tkTextSetCursor tkTextTranspose \
tkTextUpDownLine tkTraverseToMenu tkTraverseWithinMenu tk_bisque \
tk_chooseColor tk_dialog tk_focusFollowsMouse tk_focusNext \
tk_focusPrev tk_getOpenFile tk_getSaveFile tk_messageBox \
tk_optionMenu tk_popup tk_setPalette tk_textCopy tk_textCut \
tk_textPaste

keywords.*.tcl=$(keywordclass.tcl) $(keywordclass.tk) $(keywordclass.TkCommands)

keywords.*.itcl=$(keywordclass.tcl) $(keywordclass.tk) $(keywordclass.itcl) \
$(keywordclass.TkCommands)

statement.end.*.tcl=8  ;
statement.lookback.*.tcl=1
block.start.*.tcl=4 {
block.end.*.tcl=4 }

comment.block.tcl=#~
comment.box.start.tcl=##
comment.box.middle.tcl= #
comment.box.end.tcl= ##

style.tcl.0=fore:#808080
style.tcl.1=fore:#007F00,$(font.comment)
style.tcl.2=fore:#007F7F
style.tcl.3=fore:#7F007F,$(font.monospace)
style.tcl.4=fore:#7F007F,$(font.monospace)
style.tcl.5=fore:#00007F,bold
style.tcl.6=fore:#7F0000
style.tcl.7=fore:#7F0000
style.tcl.8=fore:#0000FF,bold
style.tcl.9=fore:#007F7F,bold
style.tcl.10=bold
style.tcl.11=
style.tcl.12=fore:#7F7F7F
style.tcl.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.tcl.34=fore:#0000FF,bold
style.tcl.35=fore:#FF0000,bold
braces.tcl.style=10



file.patterns.tex=
file.patterns.latex=
file.patterns.context=

file.patterns.tex=*.tex;*.sty;
file.patterns.latex=*.tex;*.sty;*.aux;*.toc;*.idx;
file.patterns.context=*.tex;*.tui;*.tuo;*.sty;


filter.context=TeX|$(file.patterns.tex)|
filter.context=LaTeX|$(file.patterns.latex)|
filter.context=ConTeXt|$(file.patterns.context)|

lexer.$(file.patterns.tex)=tex
lexer.$(file.patterns.latex)=tex
lexer.$(file.patterns.context)=tex


command.compile.$(file.patterns.tex)=
command.build.$(file.patterns.tex)=tex $(FileNameExt)
command.go.$(file.patterns.tex)=gv $(FileName).pdf

command.compile.$(file.patterns.latex)=
command.build.$(file.patterns.latex)=pdflatex $(FileNameExt)
command.go.$(file.patterns.latex)=gv $(FileName).pdf

command.compile.$(file.patterns.context)=
command.build.$(file.patterns.context)=texexec --pdf $(FileNameExt)
command.go.$(file.patterns.context)=gv $(FileName).pdf

command.0.$(file.patterns.tex)=
command.1.$(file.patterns.tex)=
command.2.$(file.patterns.tex)=
command.3.$(file.patterns.tex)=
command.4.$(file.patterns.tex)=
command.5.$(file.patterns.tex)=
command.6.$(file.patterns.tex)=
command.7.$(file.patterns.tex)=
command.8.$(file.patterns.tex)=
command.9.$(file.patterns.tex)=

command.0.$(file.patterns.latex)=
command.1.$(file.patterns.latex)=
command.2.$(file.patterns.latex)=
command.3.$(file.patterns.latex)=
command.4.$(file.patterns.latex)=
command.5.$(file.patterns.latex)=
command.6.$(file.patterns.latex)=
command.7.$(file.patterns.latex)=
command.8.$(file.patterns.latex)=
command.9.$(file.patterns.latex)=

command.0.$(file.patterns.context)=
command.1.$(file.patterns.context)=
command.2.$(file.patterns.context)=
command.3.$(file.patterns.context)=
command.4.$(file.patterns.context)=
command.5.$(file.patterns.context)=
command.6.$(file.patterns.context)=
command.7.$(file.patterns.context)=
command.8.$(file.patterns.context)=
command.9.$(file.patterns.context)=


style.tex.0=fore:#7F7F00
style.tex.0=fore:#3F3F3F
style.tex.1=fore:#007F7F
style.tex.2=fore:#7F0000
style.tex.3=fore:#7F7F00
style.tex.4=fore:#007F00

style.tex.34=fore:#00007F
style.tex.35=fore:#7F007F


comment.block.tex=%
comment.block.at.line.start.tex=1


lexer.tex.interface.default=0


lexer.tex.use.keywords=1


lexer.tex.comment.process=0


lexer.tex.auto.if=1


keywordclass.primitives.tex=\
    above abovedisplayshortskip abovedisplayskip \
    abovewithdelims accent adjdemerits advance afterassignment \
    aftergroup atop atopwithdelims \
    badness baselineskip batchmode begingroup \
    belowdisplayshortskip belowdisplayskip binoppenalty botmark \
    box boxmaxdepth brokenpenalty \
    catcode char chardef cleaders closein closeout clubpenalty \
    copy count countdef cr crcr csname \
    day deadcycles def defaulthyphenchar defaultskewchar \
    delcode delimiter delimiterfactor delimeters \
    delimitershortfall delimeters dimen dimendef discretionary \
    displayindent displaylimits displaystyle \
    displaywidowpenalty displaywidth divide \
    doublehyphendemerits dp dump \
    edef else emergencystretch end endcsname endgroup endinput \
    endlinechar eqno errhelp errmessage errorcontextlines \
    errorstopmode escapechar everycr everydisplay everyhbox \
    everyjob everymath everypar everyvbox exhyphenpenalty \
    expandafter  \
    fam fi finalhyphendemerits firstmark floatingpenalty font \
    fontdimen fontname futurelet \
    gdef global group globaldefs \
    halign hangafter hangindent hbadness hbox hfil horizontal \
    hfill horizontal hfilneg hfuzz hoffset holdinginserts hrule \
    hsize hskip hss horizontal ht hyphenation hyphenchar \
    hyphenpenalty hyphen \
    if ifcase ifcat ifdim ifeof iffalse ifhbox ifhmode ifinner \
    ifmmode ifnum ifodd iftrue ifvbox ifvmode ifvoid ifx \
    ignorespaces immediate indent input inputlineno input \
    insert insertpenalties interlinepenalty \
    jobname \
    kern \
    language lastbox lastkern lastpenalty lastskip lccode \
    leaders left lefthyphenmin leftskip leqno let limits \
    linepenalty line lineskip lineskiplimit long looseness \
    lower lowercase \
    mag mark mathaccent mathbin mathchar mathchardef mathchoice \
    mathclose mathcode mathinner mathop mathopen mathord \
    mathpunct mathrel mathsurround maxdeadcycles maxdepth \
    meaning medmuskip message mkern month moveleft moveright \
    mskip multiply muskip muskipdef \
    newlinechar noalign noboundary noexpand noindent nolimits \
    nonscript scriptscript nonstopmode nulldelimiterspace \
    nullfont number \
    omit openin openout or outer output outputpenalty over \
    overfullrule overline overwithdelims \
    pagedepth pagefilllstretch pagefillstretch pagefilstretch \
    pagegoal pageshrink pagestretch pagetotal par parfillskip \
    parindent parshape parskip patterns pausing penalty \
    postdisplaypenalty predisplaypenalty predisplaysize \
    pretolerance prevdepth prevgraf \
    radical raise read relax relpenalty right righthyphenmin \
    rightskip romannumeral \
    scriptfont scriptscriptfont scriptscriptstyle scriptspace \
    scriptstyle scrollmode setbox setlanguage sfcode shipout \
    show showbox showboxbreadth showboxdepth showlists showthe \
    skewchar skip skipdef spacefactor spaceskip span special \
    splitbotmark splitfirstmark splitmaxdepth splittopskip \
    string \
    tabskip textfont textstyle the thickmuskip thinmuskip time \
    toks toksdef tolerance topmark topskip tracingcommands \
    tracinglostchars tracingmacros tracingonline tracingoutput \
    tracingpages tracingparagraphs tracingrestores tracingstats \
    uccode uchyph underline unhbox unhcopy unkern unpenalty \
    unskip unvbox unvcopy uppercase \
    vadjust valign vbadness vbox vcenter vfil vfill vfilneg \
    vfuzz voffset vrule vsize vskip vsplit vss vtop \
    wd widowpenalty write \
    xdef xleaders xspaceskip \
    year

keywordclass.primitives.etex=\
    beginL beginR botmarks \
    clubpenalties currentgrouplevel currentgrouptype \
    currentifbranch currentiflevel currentiftype \
    detokenize dimexpr displaywidowpenalties \
    endL endR eTeXrevision eTeXversion everyeof \
    firstmarks fontchardp fontcharht fontcharic fontcharwd \
    glueexpr glueshrink glueshrinkorder gluestretch \
    gluestretchorder gluetomu \
    ifcsname ifdefined iffontchar interactionmode \
    interactionmode interlinepenalties \
    lastlinefit lastnodetype \
    marks topmarks middle muexpr mutoglue \
    numexpr \
    pagediscards parshapedimen parshapeindent parshapelength \
    predisplaydirection \
    savinghyphcodes savingvdiscards scantokens showgroups \
    showifs showtokens splitdiscards splitfirstmarks \
    TeXXeTstate tracingassigns tracinggroups tracingifs \
    tracingnesting tracingscantokens \
    unexpanded unless \
    widowpenalties

keywordclass.primitives.pdftex=\
    pdfadjustspacing pdfannot pdfavoidoverfull \
    pdfcatalog pdfcompresslevel \
    pdfdecimaldigits pdfdest pdfdestmargin \
    pdfendlink pdfendthread \
    pdffontattr pdffontexpand pdffontname pdffontobjnum pdffontsize \
    pdfhorigin \
    pdfimageresolution pdfincludechars pdfinfo \
    pdflastannot pdflastdemerits pdflastobj \
    pdflastvbreakpenalty pdflastxform pdflastximage \
    pdflastximagepages pdflastxpos pdflastypos \
    pdflinesnapx pdflinesnapy pdflinkmargin pdfliteral \
    pdfmapfile pdfmaxpenalty pdfminpenalty pdfmovechars \
    pdfnames \
    pdfobj pdfoptionpdfminorversion pdfoutline pdfoutput \
    pdfpageattr pdfpageheight pdfpageresources pdfpagesattr \
    pdfpagewidth pdfpkresolution pdfprotrudechars \
    pdfrefobj pdfrefxform pdfrefximage \
    pdfsavepos pdfsnaprefpoint pdfsnapx pdfsnapy pdfstartlink \
    pdfstartthread \
    pdftexrevision pdftexversion pdfthread pdfthreadmargin \
    pdfuniqueresname \
    pdfvorigin \
    pdfxform pdfximage

keywordclass.primitives.omega=
    odelimiter omathaccent omathchar oradical omathchardef omathcode odelcode \
    leftghost rightghost \
    charwd charht chardp charit \
    localleftbox localrightbox \
    localinterlinepenalty localbrokenpenalty \
    pagedir bodydir pardir textdir mathdir \
    boxdir nextfakemath \
    pagewidth pageheight pagerightoffset pagebottomoffset \
    nullocp nullocplist ocp externalocp ocplist pushocplist popocplist clearocplists ocptracelevel \
    addbeforeocplist addafterocplist removebeforeocplist removeafterocplist \
    OmegaVersion \
    InputTranslation OutputTranslation DefaultInputTranslation DefaultOutputTranslation \
    noInputTranslation noOutputTranslation \
    InputMode OutputMode DefaultInputMode DefaultOutputMode \
    noInputMode noOutputMode noDefaultInputMode noDefaultOutputMode


keywordclass.macros.plain.partial=\
    TeX \
    bgroup egroup endgraf space empty null \
    newcount newdimen newskip newmuskip newbox newtoks newhelp newread newwrite newfam newlanguage newinsert newif \
    maxdimen magstephalf magstep \
    frenchspacing nonfrenchspacing normalbaselines obeylines obeyspaces raggedright ttraggedright \
    thinspace negthinspace enspace enskip quad qquad \
    smallskip medskip bigskip removelastskip topglue vglue hglue \
    break nobreak allowbreak filbreak goodbreak smallbreak medbreak bigbreak \
    line leftline rightline centerline rlap llap underbar strutbox strut \
    cases matrix pmatrix bordermatrix eqalign displaylines eqalignno leqalignno \
    pageno folio tracingall showhyphens fmtname fmtversion \
    hphantom vphantom phantom smash

keywordclass.macros.eplain.partial=\
    eTeX \
    newmarks grouptype interactionmode nodetype iftype \
    tracingall loggingall tracingnone


keywordclass.primitives.pdftex.experimental=

keywordclass.primitives.all=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.primitives.etex) \
    $(keywordclass.primitives.pdftex) \
    $(keywordclass.primitives.pdftex.experimental) \
    $(keywordclass.primitives.omega)


keywordclass.macros.context.undocumented.en=
keywordclass.macros.context.undocumented.nl=
keywordclass.macros.context.undocumented.de=
keywordclass.macros.context.undocumented.cz=
keywordclass.macros.context.undocumented.it=
keywordclass.macros.context.undocumented.ro=

keywordclass.macros.context.extras=

keywordclass.macros.context.nl=
keywordclass.macros.context.en=
keywordclass.macros.context.de=
keywordclass.macros.context.cz=
keywordclass.macros.context.it=
keywordclass.macros.context.ro=

import cont-en-scite
import cont-nl-scite
import cont-de-scite
import cont-cz-scite
import cont-it-scite
import cont-ro-scite

import cont-xx-scite


keywordclass.macros.latex.all=

import latex-scite


keywordclass.tex.all=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.macros.plain.partial)

keywordclass.etex.all=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.primitives.etex) \
    $(keywordclass.macros.plain.partial) \
    $(keywordclass.macros.eplain.partial)

keywordclass.latex.all=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.primitives.etex) \
    $(keywordclass.macros.latex.all)

keywordclass.pdflatex.all=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.primitives.etex) \
    $(keywordclass.primitives.pdftex) \
    $(keywordclass.macros.latex.all)


keywordclass.context.base=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.primitives.etex) \
    $(keywordclass.primitives.pdftex) \
    $(keywordclass.primitives.pdftex.experimental) \
    $(keywordclass.primitives.omega) \
    $(keywordclass.macros.plain.partial) \
    $(keywordclass.macros.eplain.partial)

keywordclass.context.all=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.en) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.en)

keywordclass.context.all.nl=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.nl) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.nl)

keywordclass.context.all.en=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.en) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.en)

keywordclass.context.all.de=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.de) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.de)

keywordclass.context.all.cz=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.cz) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.cz)

keywordclass.context.all.it=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.it) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.it)

keywordclass.context.all.ro=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.ro) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.ro)


keywords.$(file.patterns.tex)=$(keywordclass.tex.all)
keywords.$(file.patterns.latex)=$(keywordclass.latex.all)
keywords.$(file.patterns.context)=$(keywordclass.context.all)


keywords.$(file.patterns.context)=$(keywordclass.context.base)

keywords2.$(file.patterns.context)=$(keywordclass.context.all.nl)
keywords3.$(file.patterns.context)=$(keywordclass.context.all.en)
keywords4.$(file.patterns.context)=$(keywordclass.context.all.de)
keywords5.$(file.patterns.context)=$(keywordclass.context.all.cz)
keywords6.$(file.patterns.context)=$(keywordclass.context.all.it)
keywords7.$(file.patterns.context)=$(keywordclass.context.all.ro)



keywords8.$(file.patterns.context)=$(keywordclass.pdflatex.all)


word.characters.$(file.patterns.tex)=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\@
word.characters.$(file.patterns.latex)=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\@
word.characters.$(file.patterns.context)=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\@!?


file.patterns.vb=*.vb;*.bas;*.frm;*.cls;*.ctl;*.pag;*.dsr;*.dob
file.patterns.wscript=*.vbs;*.dsm

filter.vb=VB (vb vbp vbs bas frm cls ctl pag dsr dob)|$(file.patterns.vb);$(file.patterns.wscript);*.vbp;*.vbg;*.mak;*.vbw|

lexer.$(file.patterns.vb)=vb
lexer.$(file.patterns.wscript)=vbscript

keywordclass.vb=and begin case call continue do each else elseif end erase \
error event exit false for function get gosub goto if implement in load loop lset \
me mid new next not nothing on or property raiseevent rem resume return rset \
select set stop sub then to true unload until wend while with withevents \
attribute alias as boolean byref byte byval const compare currency date declare dim double \
enum explicit friend global integer let lib long module object option optional \
preserve private property public redim single static string type variant

keywordclass.vbnet=addhandler addressof andalso alias and ansi as assembly auto boolean \
byref byte byval call case catch cbool cbyte cchar cdate cdec cdbl char cint class \
clng cobj const cshort csng cstr ctype date decimal declare default delegate dim do double \
each else elseif end enum erase error event exit false finally for friend function get \
gettype goto  handles if implements imports in inherits integer interface is let lib like long \
loop me mod module mustinherit mustoverride mybase myclass namespace new \
next not nothing notinheritable notoverridable object on option optional or \
orelse overloads overridable overrides paramarray preserve private property protected public \
raiseevent readonly redim rem removehandler resume return select set shadows \
shared short single static step stop string structure sub synclock then throw to true try \
typeof unicode until variant when while with withevents writeonly xor

keywords.$(file.patterns.vb)=$(keywordclass.vbnet)
keywords.$(file.patterns.wscript)=$(keywordclass.vb)

keywordclass.vbotherstatements=appactivate beep chdir chdrive close \
deletesetting filecopy get input kill line lock unlock lset mid mkdir name \
open print put randomize reset rmdir rset savepicture savesetting seek \
sendkeys setattr time unload width write

comment.block.vb='~

style.vb.0=fore:#000000,$(font.vbs)
style.vb.1=$(colour.code.comment.line),$(font.code.comment.line)
style.vb.2=$(colour.number)
style.vb.3=$(colour.keyword)
style.vb.4=$(colour.string)
style.vb.5=$(colour.preproc)
style.vb.6=$(colour.operator)
style.vb.7=
style.vb.8=$(colour.number)

style.vbscript.0=$(style.vb.0)
style.vbscript.1=$(style.vb.1)
style.vbscript.2=$(style.vb.2)
style.vbscript.3=$(style.vb.3)
style.vbscript.4=$(style.vb.4)
style.vbscript.5=$(style.vb.5)
style.vbscript.6=$(style.vb.6)
style.vbscript.7=$(style.vb.7)
style.vbscript.8=$(style.vb.8)

command.go.$(file.patterns.wscript)="$(FilePath)"
command.go.subsystem.$(file.patterns.wscript)=2

command.build.$(file.patterns.wscript)=cscript "$(FilePath)"
command.build.subsystem.$(file.patterns.wscript)=1


file.patterns.verilog=*.v;*.vh
filter.verilog=Verilog (verilog)|$(file.patterns.verilog)|

lexer.$(file.patterns.verilog)=verilog

word.chars.verilog=$(chars.alpha)$(chars.numeric)_`$#
word.characters.$(file.patterns.verilog)=$(word.chars.verilog)

calltip.verilog.word.characters=$(chars.alpha)$(chars.numeric)_$

comment.block.verilog=//~
comment.stream.start.verilog=/*
comment.stream.end.verilog=*/
comment.box.start.verilog=/*
comment.box.middle.verilog= *
comment.box.end.verilog= */

fold.comment=1
fold.preprocessor=1
fold.at.else=1
fold.verilog.flags=0


indent.maintain.$(file.patterns.verilog)=1;

preprocessor.symbol.$(file.patterns.verilog)=`
preprocessor.start.$(file.patterns.verilog)=ifdef
preprocessor.middle.$(file.patterns.verilog)=else
preprocessor.end.$(file.patterns.verilog)=endif

keywordclass.verilog=always and assign begin \
xbuf buf bufif0 bufif1 case casex casez cmos \
default defparam else end endcase \
endfunction endmodule endprimitive endspecify \
endtable endtask event for force forever \
fork function if initial inout input \
integer join macromodule makefile module \
nand negedge nmos nor not notif0 notif1 \
or output parameter pmos posedge primitive \
pulldown pullup rcmos real realtime reg \
repeat rnmos rpmos rtran rtranif0 rtranif1 \
signed specify specparam supply supply0 supply1 table \
task time tran tranif0 tranif1 tri tri0 \
tri1 triand trior trireg vectored wait \
wand while wire wor xnor xor

keywords.$(file.patterns.verilog)=$(keywordclass.verilog)

keywords3.$(file.patterns.verilog)=$readmemb $readmemh $sreadmemb $sreadmemh $display $write $strobe $monitor $fdisplay $fwrite $fstrobe \
$fmonitor $fopen $fclose $time $stime $realtime $scale $printtimescale $timeformat $stop $finish $save \
$incsave $restart $input $log $nolog $key $nokey $scope $showscopes $showscopes $showvars $showvars \
$countdrivers $list $monitoron $monitoroff $dumpon $dumpoff $dumpfile $dumplimit $dumpflush $dumpvars \
$dumpall $reset $reset $reset $reset $reset $random $getpattern $rtoi $itor $realtobits $bitstoreal \
$setup $hold $setuphold $period $width $skew $recovery

style.verilog.32=$(font.base)
style.verilog.0=fore:#808080
style.verilog.1=$(colour.code.comment.box),$(font.code.comment.box)
style.verilog.2=$(colour.code.comment.line),$(font.code.comment.line)
style.verilog.3=fore:#3F7F3F,$(font.code.comment.line),back:#E0F0FF,eolfilled
style.verilog.4=$(colour.number)
style.verilog.5=$(colour.keyword),bold
style.verilog.6=$(colour.string),$(font.string.literal)
style.verilog.7=fore:#007F7F
style.verilog.8=fore:#804020
style.verilog.9=$(colour.preproc)
style.verilog.10=fore:#007070,bold
style.verilog.11=
style.verilog.12=fore:#000000,$(font.string.literal),back:#E0C0E0,eolfilled
style.verilog.19=fore:#804020,$(font.code.comment.doc)
braces.verilog.style=10


file.patterns.yaml=*.yaml;*.yml
filter.yaml=YAML (yaml)|$(file.patterns.yaml)|
lexer.$(file.patterns.yaml)=yaml

tabsize.$(file.patterns.yaml)=2
indent.size.$(file.patterns.yaml)=2
use.tabs.$(file.patterns.yaml)=0
indent.automatic.$(file.patterns.yaml)=0
indent.opening.$(file.patterns.yaml)=0
indent.closing.$(file.patterns.yaml)=0

comment.block.yaml=#~

keywords.$(file.patterns.yaml)=true false yes no

style.yaml.0=$(font.text),fore:#000000
style.yaml.1=$(font.comment),fore:#008800
style.yaml.2=$(font.base),fore:#000088,bold
style.yaml.3=$(font.base),fore:#880088
style.yaml.4=$(font.base),fore:#880000
style.yaml.5=$(font.base),fore:#008888
style.yaml.6=$(font.comment),fore:#FFFFFF,bold,back:#000088,eolfilled
style.yaml.7=$(font.text),fore:#333366
style.yaml.8=$(font.text),fore:#FFFFFF,italics,bold,back:#FF0000,eolfilled
